New test risc-v_1-stage
git diff warp-v_risc-v_1-stage.sv
diff --git a/test3/risc-v_1-stage/warp-v_risc-v_1-stage.sv b/test3/risc-v_1-stage/warp-v_risc-v_1-stage.sv
index a192d34..517dc72 100644
--- a/test3/risc-v_1-stage/warp-v_risc-v_1-stage.sv
+++ b/test3/risc-v_1-stage/warp-v_risc-v_1-stage.sv
@@ -1828,3 +1828,5 @@ module top(input logic clk, input logic reset, input logic [31:0] cyc_cnt, outpu
    endgenerate //_\end_source
 //_\SV
    endmodule
+`include "clk_gate.v"
+`include "pseudo_rand.sv"
yosys -l simple.log -p 'synth_ice40 -blif warp-v_risc-v_1-stage.blif -json warp-v_risc-v_1-stage.json' warp-v_risc-v_1-stage.sv

=== top ===

   Number of wires:               6651
   Number of wire bits:          11766
   Number of public wires:        6651
   Number of public wire bits:   11766
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               8809
     SB_CARRY                      453
     SB_DFF                        312
     SB_DFFE                      1062
     SB_DFFESR                     192
     SB_DFFSR                      165
     SB_DFFSS                        1
     SB_LUT4                      6620
     SB_RAM40_4K                     4

Latest update 10/07/20 
Good news was able to synthsize the design.
Bad new it is quite large.
cp ../../../formal/verilog/clk_gate.v .
needed to comment line 28 //`include "sp_verilog.vh"

cp  ../../../formal/verilog/pseudo_rand* .

yosys -l simple.log -p 'synth_ice40 -blif warp-v_risc-v_4-stage.blif -json warp-v_risc-v_4-stage.json' warp-v_risc-v_4-stage.sv

=== top ===

   Number of wires:               7985
   Number of wire bits:          14032
   Number of public wires:        7985
   Number of public wire bits:   14032
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              10468
     SB_CARRY                      642
     SB_DFF                        671
     SB_DFFE                      1062
     SB_DFFESR                     193
     SB_DFFESS                       1
     SB_DFFSR                      277
     SB_DFFSS                       11
     SB_LUT4                      7607
     SB_RAM40_4K                     4
     
     
git clone --recurse-submodules https://github.com/develone/warp-v.git

cd warp-v/impl

make
Processing warp-v_mini_4-stage.tlv using SandPiper(TM) SaaS Edition.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  276k  100 74061  100  204k  39583   109k  0:00:01  0:00:01 --:--:--  147k
INFORM(0) (PROD_INFO):
	SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA
	Run as: "java -jar sandpiper.jar --iArgs --nopath -i out/warp-v_mini_4-stage.m4out.tlv -o out/warp-v_mini_4-stage.sv
	For help, including product info, run with -h.

INFORM(0) (LICENSE):
	Licensed to "Redwood EDA" as: Full Edition.

INFORM(0) (FILES):
	Reading "out/warp-v_mini_4-stage.m4out.tlv" to produce:
		Translated HDL File: "out/warp-v_mini_4-stage.sv"
		Generated HDL File: "out/warp-v_mini_4-stage_gen.sv"

Processing warp-v_mips-i_4-stage.tlv using SandPiper(TM) SaaS Edition.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  283k  100 80274  100  204k  41962   107k  0:00:01  0:00:01 --:--:--  147k
INFORM(0) (PROD_INFO):
	SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA
	Run as: "java -jar sandpiper.jar --iArgs --nopath -i out/warp-v_mips-i_4-stage.m4out.tlv -o out/warp-v_mips-i_4-stage.sv
	For help, including product info, run with -h.

INFORM(0) (LICENSE):
	Licensed to "Redwood EDA" as: Full Edition.

INFORM(0) (FILES):
	Reading "out/warp-v_mips-i_4-stage.m4out.tlv" to produce:
		Translated HDL File: "out/warp-v_mips-i_4-stage.sv"
		Generated HDL File: "out/warp-v_mips-i_4-stage_gen.sv"

Processing warp-v_risc-v_1-stage.tlv using SandPiper(TM) SaaS Edition.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  304k  100   99k  100  204k  35724  73492  0:00:02  0:00:02 --:--:--  106k
INFORM(0) (PROD_INFO):
	SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA
	Run as: "java -jar sandpiper.jar --iArgs --nopath -i out/warp-v_risc-v_1-stage.m4out.tlv -o out/warp-v_risc-v_1-stage.sv
	For help, including product info, run with -h.

INFORM(0) (LICENSE):
	Licensed to "Redwood EDA" as: Full Edition.

INFORM(0) (FILES):
	Reading "out/warp-v_risc-v_1-stage.m4out.tlv" to produce:
		Translated HDL File: "out/warp-v_risc-v_1-stage.sv"
		Generated HDL File: "out/warp-v_risc-v_1-stage_gen.sv"

Processing warp-v_risc-v_4-stage_retime.tlv using SandPiper(TM) SaaS Edition.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  306k  100  101k  100  204k  27529  55284  0:00:03  0:00:03 --:--:-- 82792
INFORM(0) (PROD_INFO):
	SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA
	Run as: "java -jar sandpiper.jar --iArgs --nopath -i out/warp-v_risc-v_4-stage_retime.m4out.tlv -o out/warp-v_risc-v_4-stage_retime.sv
	For help, including product info, run with -h.

INFORM(0) (LICENSE):
	Licensed to "Redwood EDA" as: Full Edition.

INFORM(0) (FILES):
	Reading "out/warp-v_risc-v_4-stage_retime.m4out.tlv" to produce:
		Translated HDL File: "out/warp-v_risc-v_4-stage_retime.sv"
		Generated HDL File: "out/warp-v_risc-v_4-stage_retime_gen.sv"

Processing warp-v_risc-v_4-stage.tlv using SandPiper(TM) SaaS Edition.
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  307k  100  103k  100  204k  44619  88598  0:00:02  0:00:02 --:--:--  130k
INFORM(0) (PROD_INFO):
	SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA
	Run as: "java -jar sandpiper.jar --iArgs --nopath -i out/warp-v_risc-v_4-stage.m4out.tlv -o out/warp-v_risc-v_4-stage.sv
	For help, including product info, run with -h.

INFORM(0) (LICENSE):
	Licensed to "Redwood EDA" as: Full Edition.

INFORM(0) (FILES):
	Reading "out/warp-v_risc-v_4-stage.m4out.tlv" to produce:
		Translated HDL File: "out/warp-v_risc-v_4-stage.sv"
		Generated HDL File: "out/warp-v_risc-v_4-stage_gen.sv"

cd out/risc-v_4-stage

cp ../../../formal/verilog/sandpiper.vh .
cp ../../../formal/verilog/sandpiper_gen.vh .
cp ../../../formal/verilog/sp_default.vh .


mkdir out 

cp -R sv_url_inc out/

yosys -l simple.log -p 'synth_ice40 -blif warp-v_risc-v_4-stage.blif -json warp-v_risc-v_4-stage.json' warp-v_risc-v_4-stage.sv

 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+1706 (git sha1 7cc9d487, clang 7.0.1-8+rpi3 -fPIC -Os)


-- Parsing `warp-v_risc-v_4-stage.sv' using frontend `verilog -sv' --

1. Executing Verilog-2005 frontend: warp-v_risc-v_4-stage.sv
Parsing SystemVerilog input from `warp-v_risc-v_4-stage.sv' to AST representation.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\top'.
Warning: reg '\RW_rand_vect' is assigned in a continuous assignment at warp-v_risc-v_4-stage.sv:10.
Warning: wire '\L1_FETCH_Instr_HoldInst_Src[1].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1654.
Warning: wire '\L1_FETCH_Instr_HoldInst_Src[2].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1654.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a1' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1672.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1673.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1674.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a1' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1672.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1673.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1674.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1726.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1727.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_reg_value_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1730.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1726.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1727.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_reg_value_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1730.
Warning: wire '\L1_MEM_Data_Src[1].L1_dummy_a4' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1775.
Warning: wire '\L1_MEM_Data_Src[2].L1_dummy_a4' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1775.
Warning: Replacing memory \FETCH_Instr_Regs_pending_a3 with list of registers. See warp-v_risc-v_4-stage_gen.sv:1717
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -blif warp-v_risc-v_4-stage.blif -json warp-v_risc-v_4-stage.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   1 design levels: top                 
root of   0 design levels: picorv32_pcpi_fast_mul
root of   0 design levels: picorv32_pcpi_div   
Automatically selected top as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \picorv32_pcpi_div
Used module:     \picorv32_pcpi_fast_mul
ERROR: Module `\clk_gate' referenced in module `\top' in cell `\L1clk_FETCH_Instr_Src[2].gen_clkP_FETCH_Instr_Src_is_reg_condition_a2' is not part of the design.

