// Generated by SandPiper(TM) 1.9-2018/02/11-beta from Redwood EDA.
// (Installed here: /home/devel/SandPiper_1.9-2018_02_11-beta_distro.)
// Redwood EDA does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


`include "sandpiper_gen.vh"





//
// Signals declared top-level.
//

// For $reset.
logic L0_reset_a0;

// For |rx$i_data.
logic [7:0] RX_i_data_a0;

// For |rx$i_uart_rx.
logic RX_i_uart_rx_a0;

// For |rx$lcl_data.
logic RX_lcl_data_a0;

// For |tx$lcl_data.
logic [7:0] TX_lcl_data_a0;
logic [7:2] TX_lcl_data_a1,
            TX_lcl_data_a2;
logic [7:3] TX_lcl_data_a3;
logic [7:4] TX_lcl_data_a4;
logic [7:5] TX_lcl_data_a5;
logic [7:6] TX_lcl_data_a6;
logic [7:7] TX_lcl_data_a7;

// For |tx$o_data.
logic [7:0] TX_o_data_a0;

// For |tx$o_uart_tx.
logic TX_o_uart_tx_a0;

// For |tx$o_uart_tx_a0.
logic TX_o_uart_tx_a0_a1;

// For |tx$o_uart_tx_a1.
logic TX_o_uart_tx_a1_a2;

// For |tx$o_uart_tx_a2.
logic TX_o_uart_tx_a2_a3;

// For |tx$o_uart_tx_a3.
logic TX_o_uart_tx_a3_a4;

// For |tx$o_uart_tx_a4.
logic TX_o_uart_tx_a4_a5;

// For |tx$o_uart_tx_a5.
logic TX_o_uart_tx_a5_a6;

// For |tx$o_uart_tx_a6.
logic TX_o_uart_tx_a6_a7;

// For |tx$r_busy.
logic TX_r_busy_a0;



generate


   //
   // Scope: |tx
   //

      // For $lcl_data.
      always_ff @(posedge clk) TX_lcl_data_a1[7:2] <= TX_lcl_data_a0[7:2];
      always_ff @(posedge clk) TX_lcl_data_a2[7:2] <= TX_lcl_data_a1[7:2];
      always_ff @(posedge clk) TX_lcl_data_a3[7:3] <= TX_lcl_data_a2[7:3];
      always_ff @(posedge clk) TX_lcl_data_a4[7:4] <= TX_lcl_data_a3[7:4];
      always_ff @(posedge clk) TX_lcl_data_a5[7:5] <= TX_lcl_data_a4[7:5];
      always_ff @(posedge clk) TX_lcl_data_a6[7:6] <= TX_lcl_data_a5[7:6];
      always_ff @(posedge clk) TX_lcl_data_a7[7:7] <= TX_lcl_data_a6[7:7];

      // For signal $o_uart_tx_a0, which had no assignment.
      assign TX_o_uart_tx_a0_a1 = 'x;

      // For signal $o_uart_tx_a1, which had no assignment.
      assign TX_o_uart_tx_a1_a2 = 'x;

      // For signal $o_uart_tx_a2, which had no assignment.
      assign TX_o_uart_tx_a2_a3 = 'x;

      // For signal $o_uart_tx_a3, which had no assignment.
      assign TX_o_uart_tx_a3_a4 = 'x;

      // For signal $o_uart_tx_a4, which had no assignment.
      assign TX_o_uart_tx_a4_a5 = 'x;

      // For signal $o_uart_tx_a5, which had no assignment.
      assign TX_o_uart_tx_a5_a6 = 'x;

      // For signal $o_uart_tx_a6, which had no assignment.
      assign TX_o_uart_tx_a6_a7 = 'x;




endgenerate




//
// Debug Signals
//

generate

   if (1) begin : DEBUG_SIGS

      logic  \@0$reset ;
      assign \@0$reset = L0_reset_a0;

      //
      // Scope: |rx
      //
      if (1) begin : \|rx 
         logic [7:0] \@0$i_data ;
         assign \@0$i_data = RX_i_data_a0;
         logic  \@0$i_uart_rx ;
         assign \@0$i_uart_rx = RX_i_uart_rx_a0;
         logic  \@0$lcl_data ;
         assign \@0$lcl_data = RX_lcl_data_a0;
      end

      //
      // Scope: |tx
      //
      if (1) begin : \|tx 
         logic [7:0] \@0$lcl_data ;
         assign \@0$lcl_data = TX_lcl_data_a0;
         logic [7:0] \@0$o_data ;
         assign \@0$o_data = TX_o_data_a0;
         logic  \@0$o_uart_tx ;
         assign \@0$o_uart_tx = TX_o_uart_tx_a0;
         logic  \@1$o_uart_tx_a0 ;
         assign \@1$o_uart_tx_a0 = TX_o_uart_tx_a0_a1;
         logic  \@2$o_uart_tx_a1 ;
         assign \@2$o_uart_tx_a1 = TX_o_uart_tx_a1_a2;
         logic  \@3$o_uart_tx_a2 ;
         assign \@3$o_uart_tx_a2 = TX_o_uart_tx_a2_a3;
         logic  \@4$o_uart_tx_a3 ;
         assign \@4$o_uart_tx_a3 = TX_o_uart_tx_a3_a4;
         logic  \@5$o_uart_tx_a4 ;
         assign \@5$o_uart_tx_a4 = TX_o_uart_tx_a4_a5;
         logic  \@6$o_uart_tx_a5 ;
         assign \@6$o_uart_tx_a5 = TX_o_uart_tx_a5_a6;
         logic  \@7$o_uart_tx_a6 ;
         assign \@7$o_uart_tx_a6 = TX_o_uart_tx_a6_a7;
         logic  \@0$r_busy ;
         assign \@0$r_busy = TX_r_busy_a0;
      end


   end

endgenerate




generate   // This is awkward, but we need to go into 'generate' context in the line that `includes the declarations file.
