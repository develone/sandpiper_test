
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+1706 (git sha1 7cc9d487, clang 7.0.1-8+rpi3 -fPIC -Os)


-- Parsing `warp-v_risc-v_4-stage.sv' using frontend `verilog -sv' --

1. Executing Verilog-2005 frontend: warp-v_risc-v_4-stage.sv
Parsing SystemVerilog input from `warp-v_risc-v_4-stage.sv' to AST representation.
Generating RTLIL representation for module `\top'.
Warning: reg '\RW_rand_vect' is assigned in a continuous assignment at warp-v_risc-v_4-stage.sv:8.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a1' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1407.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1408.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1409.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a1' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1407.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1408.
Warning: wire '\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1409.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1461.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1462.
Warning: wire '\L1b_FETCH_Instr_Src[1].L1_reg_value_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1465.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_dummy_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1461.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_dummy_a3' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1462.
Warning: wire '\L1b_FETCH_Instr_Src[2].L1_reg_value_a2' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1465.
Warning: wire '\L1_MEM_Data_Src[1].L1_dummy_a4' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1510.
Warning: wire '\L1_MEM_Data_Src[2].L1_dummy_a4' is assigned in a block at warp-v_risc-v_4-stage_gen.sv:1510.
Warning: Replacing memory \FETCH_Instr_Regs_pending_a3 with list of registers. See warp-v_risc-v_4-stage_gen.sv:1452
Generating RTLIL representation for module `\clk_gate'.
Generating RTLIL representation for module `\pseudo_rand'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -blif warp-v_risc-v_4-stage.blif -json warp-v_risc-v_4-stage.json' --

2. Executing SYNTH_ICE40 pass.

2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

2.2. Executing HIERARCHY pass (managing design hierarchy).

2.2.1. Finding top of design hierarchy..
root of   0 design levels: pseudo_rand         
root of   0 design levels: clk_gate            
root of   1 design levels: top                 
Automatically selected top as design top module.

2.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \clk_gate
Used module:     \pseudo_rand
Parameter \WIDTH = 257

2.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\pseudo_rand'.
Parameter \WIDTH = 257
Generating RTLIL representation for module `$paramod\pseudo_rand\WIDTH=257'.

2.2.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \clk_gate
Used module:     $paramod\pseudo_rand\WIDTH=257

2.2.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \clk_gate
Used module:     $paramod\pseudo_rand\WIDTH=257
Removing unused module `\pseudo_rand'.
Removed 1 unused modules.
Mapping positional arguments of cell top.L1clk_FETCH_Instr_Src[2].gen_clkP_FETCH_Instr_Src_is_reg_condition_a2 (clk_gate).
Mapping positional arguments of cell top.L1clk_FETCH_Instr_Src[1].gen_clkP_FETCH_Instr_Src_is_reg_condition_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_valid_decode_branch_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_valid_decode_a3 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_valid_decode_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_st_cond_a3 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_second_issue_ld_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_second_issue_ld_a1 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_second_issue_a3 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_second_issue_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_second_issue_a1 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_ld_st_cond_a3 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_jump_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_fetch_a1 (clk_gate).
Mapping positional arguments of cell top.gen_clkP_FETCH_Instr_branch_a2 (clk_gate).
Mapping positional arguments of cell top.gen_clkF_FETCH_Instr_branch_or_reset_a4 (clk_gate).
Mapping positional arguments of cell top.gen_clkF_FETCH_Instr_branch_or_reset_a3 (clk_gate).
Mapping positional arguments of cell top.pseudo_rand ($paramod\pseudo_rand\WIDTH=257).

2.3. Executing PROC pass (convert processes to netlists).

2.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

2.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed 1 dead cases from process $proc$warp-v_risc-v_4-stage_gen.sv:944$1324 in module top.
Marked 1 switch rules as full_case in process $proc$warp-v_risc-v_4-stage_gen.sv:944$1324 in module top.
Removed 1 dead cases from process $proc$warp-v_risc-v_4-stage_gen.sv:944$1321 in module top.
Marked 1 switch rules as full_case in process $proc$warp-v_risc-v_4-stage_gen.sv:944$1321 in module top.
Removed 1 dead cases from process $proc$warp-v_risc-v_4-stage_gen.sv:944$1162 in module top.
Marked 1 switch rules as full_case in process $proc$warp-v_risc-v_4-stage_gen.sv:944$1162 in module top.
Marked 1 switch rules as full_case in process $proc$warp-v_risc-v_4-stage_gen.sv:944$1159 in module top.
Removed a total of 3 dead cases.

2.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 250 assignments to connections.

2.3.4. Executing PROC_INIT pass (extract init attributes).

2.3.5. Executing PROC_ARST pass (detect async resets in processes).

2.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand.sv:54$1471'.
Creating decoders for process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand_gen.sv:37$1467'.
Creating decoders for process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand_gen.sv:34$1466'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1324'.
     1/1: $1$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$warp-v_risc-v_4-stage.sv:821$4_DATA[0:0]$1326
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1321'.
     1/1: $1$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$warp-v_risc-v_4-stage.sv:821$3_DATA[0:0]$1323
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1162'.
     1/1: $1$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$warp-v_risc-v_4-stage.sv:834$2_DATA[0:0]$1164
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1159'.
     1/1: $1$mem2reg_rd$\FETCH_InstrMem_instr_a0$warp-v_risc-v_4-stage.sv:357$1_DATA[31:0]$1161
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1154'.
     1/3: $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157
     2/3: $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_DATA[7:0]$1156
     3/3: $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_ADDR[4:0]$1155
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1148'.
     1/3: $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151
     2/3: $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_DATA[7:0]$1150
     3/3: $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_ADDR[4:0]$1149
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1142'.
     1/3: $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145
     2/3: $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_DATA[7:0]$1144
     3/3: $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_ADDR[4:0]$1143
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1136'.
     1/3: $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139
     2/3: $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_DATA[7:0]$1138
     3/3: $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_ADDR[4:0]$1137
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1510$1088'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1510$1087'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1465$1086'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1462$1085'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1461$1084'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1465$1083'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1462$1082'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1461$1081'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1080'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1079'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1078'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1077'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1076'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1075'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1074'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1073'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1072'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1071'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1070'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1069'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1068'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1067'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1066'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1065'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1064'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1063'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1062'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1061'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1060'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1059'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1058'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1057'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1056'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1055'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1054'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1053'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1052'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1051'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1050'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1409$1049'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1408$1048'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1407$1047'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1409$1046'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1408$1045'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1407$1044'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage.sv:1678$1020'.
     1/3: $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023
     2/3: $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_DATA[31:0]$1022
     3/3: $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_ADDR[4:0]$1021
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1502$166'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1499$165'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1496$164'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1493$163'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1490$162'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1487$161'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1484$160'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1481$159'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1443$158'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1442$157'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1439$156'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1438$155'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1435$154'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1434$153'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1431$152'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1430$151'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1427$150'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1426$149'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1420$147'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1419$146'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1399$145'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1391$144'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1388$143'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1385$142'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1382$141'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1379$140'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1376$139'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1373$138'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1370$137'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1367$136'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1364$135'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1363$134'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1360$133'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1359$132'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1356$131'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1355$130'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1354$129'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1351$128'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1348$127'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1347$126'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1346$125'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1345$124'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1342$123'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1341$122'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1338$121'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1337$120'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1334$119'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1331$118'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1328$117'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1325$116'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1322$115'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1319$114'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1318$113'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1315$112'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1312$111'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1309$110'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1306$109'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1303$108'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1300$107'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1297$106'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1296$105'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1293$104'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1292$103'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1289$102'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1286$101'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1283$100'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1280$99'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1277$98'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1274$97'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1271$96'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1268$95'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1265$94'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1262$93'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1259$92'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1256$91'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1253$90'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1250$89'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1247$88'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1244$87'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1241$86'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1238$85'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1235$84'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1232$83'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1229$82'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1226$81'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1223$80'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1220$79'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1217$78'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1214$77'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1211$76'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1208$75'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1205$74'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1202$73'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1199$72'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1196$71'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1193$70'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1190$69'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1187$68'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1184$67'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1181$66'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1178$65'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1175$64'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1172$63'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1169$62'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1166$61'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1163$60'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1160$59'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1157$58'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1154$57'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1151$56'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1148$55'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1145$54'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1142$53'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1139$52'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1136$51'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1133$50'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1130$49'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1127$48'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1124$47'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1123$46'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1120$45'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1117$44'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1114$43'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1113$42'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1110$41'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1109$40'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1106$39'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1103$38'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1100$37'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1097$36'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1094$35'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1091$34'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1088$33'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1085$32'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1082$31'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1079$30'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1076$29'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1073$28'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1070$27'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1067$26'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1064$25'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1061$24'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1058$23'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1055$22'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1054$21'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1053$20'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1052$19'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1049$18'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1048$17'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1047$16'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1046$15'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1043$14'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1042$13'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1039$12'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1036$11'.
Creating decoders for process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1035$10'.

2.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\pseudo_rand\WIDTH=257.\SEED' from process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand.sv:54$1471'.
No latch inferred for signal `\top.$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$warp-v_risc-v_4-stage.sv:821$4_DATA' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1324'.
No latch inferred for signal `\top.$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$warp-v_risc-v_4-stage.sv:821$3_DATA' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1321'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[1]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[2]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[3]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[4]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[5]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[6]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[7]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[8]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[9]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[10]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[11]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[12]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[13]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[14]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[15]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[16]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[17]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[18]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[19]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[20]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[21]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[22]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[23]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[24]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[25]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[26]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[27]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[28]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[29]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[30]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_Instr_Regs_pending_a2[31]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[0]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[1]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[2]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[3]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[4]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[5]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[6]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[7]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[8]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[9]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.\FETCH_InstrMem_instr_a0[10]' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
No latch inferred for signal `\top.$mem2reg_rd$\FETCH_Instr_Regs_pending_a3$warp-v_risc-v_4-stage.sv:834$2_DATA' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1162'.
No latch inferred for signal `\top.$mem2reg_rd$\FETCH_InstrMem_instr_a0$warp-v_risc-v_4-stage.sv:357$1_DATA' from process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1159'.

2.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\pseudo_rand\WIDTH=257.\DEFAULT_reset_a1' using process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand_gen.sv:37$1467'.
  created $dff cell `$procdff$1614' with positive edge clock.
Creating register for signal `$paramod\pseudo_rand\WIDTH=257.\DEFAULT_lfsr_a2' using process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand_gen.sv:34$1466'.
  created $dff cell `$procdff$1615' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_ADDR' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1154'.
  created $dff cell `$procdff$1616' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_DATA' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1154'.
  created $dff cell `$procdff$1617' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1154'.
  created $dff cell `$procdff$1618' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_ADDR' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1148'.
  created $dff cell `$procdff$1619' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_DATA' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1148'.
  created $dff cell `$procdff$1620' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1148'.
  created $dff cell `$procdff$1621' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_ADDR' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1142'.
  created $dff cell `$procdff$1622' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_DATA' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1142'.
  created $dff cell `$procdff$1623' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1142'.
  created $dff cell `$procdff$1624' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_ADDR' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1136'.
  created $dff cell `$procdff$1625' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_DATA' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1136'.
  created $dff cell `$procdff$1626' with positive edge clock.
Creating register for signal `\top.$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1136'.
  created $dff cell `$procdff$1627' with positive edge clock.
Creating register for signal `\top.\L1_MEM_Data_Src[2].L1_dummy_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1510$1088'.
  created $dff cell `$procdff$1628' with positive edge clock.
Creating register for signal `\top.\L1_MEM_Data_Src[1].L1_dummy_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1510$1087'.
  created $dff cell `$procdff$1629' with positive edge clock.
Creating register for signal `\top.\L1b_FETCH_Instr_Src[2].L1_reg_value_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1465$1086'.
  created $dff cell `$procdff$1630' with positive edge clock.
Creating register for signal `\top.\L1b_FETCH_Instr_Src[2].L1_dummy_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1462$1085'.
  created $dff cell `$procdff$1631' with positive edge clock.
Creating register for signal `\top.\L1b_FETCH_Instr_Src[2].L1_dummy_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1461$1084'.
  created $dff cell `$procdff$1632' with positive edge clock.
Creating register for signal `\top.\L1b_FETCH_Instr_Src[1].L1_reg_value_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1465$1083'.
  created $dff cell `$procdff$1633' with positive edge clock.
Creating register for signal `\top.\L1b_FETCH_Instr_Src[1].L1_dummy_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1462$1082'.
  created $dff cell `$procdff$1634' with positive edge clock.
Creating register for signal `\top.\L1b_FETCH_Instr_Src[1].L1_dummy_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1461$1081'.
  created $dff cell `$procdff$1635' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[31]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1080'.
  created $dff cell `$procdff$1636' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[30]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1079'.
  created $dff cell `$procdff$1637' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[29]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1078'.
  created $dff cell `$procdff$1638' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[28]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1077'.
  created $dff cell `$procdff$1639' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[27]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1076'.
  created $dff cell `$procdff$1640' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[26]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1075'.
  created $dff cell `$procdff$1641' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[25]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1074'.
  created $dff cell `$procdff$1642' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[24]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1073'.
  created $dff cell `$procdff$1643' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[23]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1072'.
  created $dff cell `$procdff$1644' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[22]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1071'.
  created $dff cell `$procdff$1645' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[21]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1070'.
  created $dff cell `$procdff$1646' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[20]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1069'.
  created $dff cell `$procdff$1647' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[19]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1068'.
  created $dff cell `$procdff$1648' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[18]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1067'.
  created $dff cell `$procdff$1649' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[17]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1066'.
  created $dff cell `$procdff$1650' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[16]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1065'.
  created $dff cell `$procdff$1651' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[15]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1064'.
  created $dff cell `$procdff$1652' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[14]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1063'.
  created $dff cell `$procdff$1653' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[13]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1062'.
  created $dff cell `$procdff$1654' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[12]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1061'.
  created $dff cell `$procdff$1655' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[11]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1060'.
  created $dff cell `$procdff$1656' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[10]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1059'.
  created $dff cell `$procdff$1657' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[9]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1058'.
  created $dff cell `$procdff$1658' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[8]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1057'.
  created $dff cell `$procdff$1659' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[7]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1056'.
  created $dff cell `$procdff$1660' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[6]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1055'.
  created $dff cell `$procdff$1661' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[5]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1054'.
  created $dff cell `$procdff$1662' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[4]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1053'.
  created $dff cell `$procdff$1663' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[3]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1052'.
  created $dff cell `$procdff$1664' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[2]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1051'.
  created $dff cell `$procdff$1665' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Regs_pending_a3[1]' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1050'.
  created $dff cell `$procdff$1666' with positive edge clock.
Creating register for signal `\top.\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1409$1049'.
  created $dff cell `$procdff$1667' with positive edge clock.
Creating register for signal `\top.\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1408$1048'.
  created $dff cell `$procdff$1668' with positive edge clock.
Creating register for signal `\top.\L1_FETCH_Instr_OrigInst_Src[2].L1_dummy_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1407$1047'.
  created $dff cell `$procdff$1669' with positive edge clock.
Creating register for signal `\top.\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1409$1046'.
  created $dff cell `$procdff$1670' with positive edge clock.
Creating register for signal `\top.\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1408$1045'.
  created $dff cell `$procdff$1671' with positive edge clock.
Creating register for signal `\top.\L1_FETCH_Instr_OrigInst_Src[1].L1_dummy_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1407$1044'.
  created $dff cell `$procdff$1672' with positive edge clock.
Creating register for signal `\top.$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_ADDR' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1678$1020'.
  created $dff cell `$procdff$1673' with positive edge clock.
Creating register for signal `\top.$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_DATA' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1678$1020'.
  created $dff cell `$procdff$1674' with positive edge clock.
Creating register for signal `\top.$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN' using process `\top.$proc$warp-v_risc-v_4-stage.sv:1678$1020'.
  created $dff cell `$procdff$1675' with positive edge clock.
Creating register for signal `\top.\MEM_Data_valid_ld_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1502$166'.
  created $dff cell `$procdff$1676' with positive edge clock.
Creating register for signal `\top.\MEM_Data_spec_ld_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1499$165'.
  created $dff cell `$procdff$1677' with positive edge clock.
Creating register for signal `\top.\MEM_Data_raw_funct3_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1496$164'.
  created $dff cell `$procdff$1678' with positive edge clock.
Creating register for signal `\top.\MEM_Data_ld_value_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1493$163'.
  created $dff cell `$procdff$1679' with positive edge clock.
Creating register for signal `\top.\MEM_Data_ld_st_word_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1490$162'.
  created $dff cell `$procdff$1680' with positive edge clock.
Creating register for signal `\top.\MEM_Data_ld_st_half_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1487$161'.
  created $dff cell `$procdff$1681' with positive edge clock.
Creating register for signal `\top.\MEM_Data_dest_reg_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1484$160'.
  created $dff cell `$procdff$1682' with positive edge clock.
Creating register for signal `\top.\MEM_Data_addr_a4' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1481$159'.
  created $dff cell `$procdff$1683' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_spec_ld_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1443$158'.
  created $dff cell `$procdff$1684' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_spec_ld_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1442$157'.
  created $dff cell `$procdff$1685' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_raw_funct3_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1439$156'.
  created $dff cell `$procdff$1686' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_raw_funct3_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1438$155'.
  created $dff cell `$procdff$1687' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_ld_value_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1435$154'.
  created $dff cell `$procdff$1688' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_ld_value_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1434$153'.
  created $dff cell `$procdff$1689' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_ld_st_word_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1431$152'.
  created $dff cell `$procdff$1690' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_ld_st_word_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1430$151'.
  created $dff cell `$procdff$1691' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_ld_st_half_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1427$150'.
  created $dff cell `$procdff$1692' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_ld_st_half_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1426$149'.
  created $dff cell `$procdff$1693' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_addr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1420$147'.
  created $dff cell `$procdff$1694' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigLoadInst_addr_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1419$146'.
  created $dff cell `$procdff$1695' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_OrigInst_dest_reg_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1399$145'.
  created $dff cell `$procdff$1696' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_valid_st_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1391$144'.
  created $dff cell `$procdff$1697' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_valid_ld_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1388$143'.
  created $dff cell `$procdff$1698' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_valid_dest_reg_valid_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1385$142'.
  created $dff cell `$procdff$1699' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_valid_decode_branch_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1382$141'.
  created $dff cell `$procdff$1700' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_valid_decode_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1379$140'.
  created $dff cell `$procdff$1701' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_trap_target_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1376$139'.
  created $dff cell `$procdff$1702' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_st_value_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1373$138'.
  created $dff cell `$procdff$1703' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_st_mask_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1370$137'.
  created $dff cell `$procdff$1704' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_st_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1367$136'.
  created $dff cell `$procdff$1705' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_spec_ld_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1364$135'.
  created $dff cell `$procdff$1706' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_spec_ld_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1363$134'.
  created $dff cell `$procdff$1707' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_second_issue_ld_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1360$133'.
  created $dff cell `$procdff$1708' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_second_issue_ld_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1359$132'.
  created $dff cell `$procdff$1709' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_second_issue_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1356$131'.
  created $dff cell `$procdff$1710' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_second_issue_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1355$130'.
  created $dff cell `$procdff$1711' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_second_issue_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1354$129'.
  created $dff cell `$procdff$1712' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_rslt_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1351$128'.
  created $dff cell `$procdff$1713' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_reset_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1348$127'.
  created $dff cell `$procdff$1714' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_reset_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1347$126'.
  created $dff cell `$procdff$1715' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_reset_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1346$125'.
  created $dff cell `$procdff$1716' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_reset_a0' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1345$124'.
  created $dff cell `$procdff$1717' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_replay_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1342$123'.
  created $dff cell `$procdff$1718' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_replay_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1341$122'.
  created $dff cell `$procdff$1719' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_reg_wr_pending_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1338$121'.
  created $dff cell `$procdff$1720' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_reg_wr_pending_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1337$120'.
  created $dff cell `$procdff$1721' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_u_imm_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1334$119'.
  created $dff cell `$procdff$1722' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_s_imm_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1331$118'.
  created $dff cell `$procdff$1723' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_rs1_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1328$117'.
  created $dff cell `$procdff$1724' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_i_imm_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1325$116'.
  created $dff cell `$procdff$1725' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_funct7_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1322$115'.
  created $dff cell `$procdff$1726' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_funct3_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1319$114'.
  created $dff cell `$procdff$1727' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_funct3_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1318$113'.
  created $dff cell `$procdff$1728' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_raw_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1315$112'.
  created $dff cell `$procdff$1729' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_pred_taken_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1312$111'.
  created $dff cell `$procdff$1730' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_non_pipelined_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1309$110'.
  created $dff cell `$procdff$1731' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_non_aborting_trap_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1306$109'.
  created $dff cell `$procdff$1732' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_misaligned_pc_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1303$108'.
  created $dff cell `$procdff$1733' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_misaligned_jump_target_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1300$107'.
  created $dff cell `$procdff$1734' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ld_st_word_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1297$106'.
  created $dff cell `$procdff$1735' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ld_st_word_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1296$105'.
  created $dff cell `$procdff$1736' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ld_st_half_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1293$104'.
  created $dff cell `$procdff$1737' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ld_st_half_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1292$103'.
  created $dff cell `$procdff$1738' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ld_st_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1289$102'.
  created $dff cell `$procdff$1739' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ld_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1286$101'.
  created $dff cell `$procdff$1740' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_jump_target_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1283$100'.
  created $dff cell `$procdff$1741' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_jump_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1280$99'.
  created $dff cell `$procdff$1742' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_xori_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1277$98'.
  created $dff cell `$procdff$1743' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_xor_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1274$97'.
  created $dff cell `$procdff$1744' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_sub_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1271$96'.
  created $dff cell `$procdff$1745' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_srli_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1268$95'.
  created $dff cell `$procdff$1746' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_srl_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1265$94'.
  created $dff cell `$procdff$1747' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_srai_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1262$93'.
  created $dff cell `$procdff$1748' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_sra_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1259$92'.
  created $dff cell `$procdff$1749' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_sltu_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1256$91'.
  created $dff cell `$procdff$1750' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_sltiu_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1253$90'.
  created $dff cell `$procdff$1751' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_slti_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1250$89'.
  created $dff cell `$procdff$1752' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_slt_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1247$88'.
  created $dff cell `$procdff$1753' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_slli_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1244$87'.
  created $dff cell `$procdff$1754' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_sll_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1241$86'.
  created $dff cell `$procdff$1755' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_ori_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1238$85'.
  created $dff cell `$procdff$1756' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_or_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1235$84'.
  created $dff cell `$procdff$1757' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_lw_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1232$83'.
  created $dff cell `$procdff$1758' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_lui_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1229$82'.
  created $dff cell `$procdff$1759' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_lhu_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1226$81'.
  created $dff cell `$procdff$1760' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_lh_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1223$80'.
  created $dff cell `$procdff$1761' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_lbu_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1220$79'.
  created $dff cell `$procdff$1762' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_lb_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1217$78'.
  created $dff cell `$procdff$1763' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_jalr_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1214$77'.
  created $dff cell `$procdff$1764' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_jal_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1211$76'.
  created $dff cell `$procdff$1765' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_j_type_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1208$75'.
  created $dff cell `$procdff$1766' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csrrwi_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1205$74'.
  created $dff cell `$procdff$1767' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csrrw_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1202$73'.
  created $dff cell `$procdff$1768' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csrrsi_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1199$72'.
  created $dff cell `$procdff$1769' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csrrs_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1196$71'.
  created $dff cell `$procdff$1770' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csrrci_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1193$70'.
  created $dff cell `$procdff$1771' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csrrc_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1190$69'.
  created $dff cell `$procdff$1772' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_write_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1187$68'.
  created $dff cell `$procdff$1773' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_timeh_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1184$67'.
  created $dff cell `$procdff$1774' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_time_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1181$66'.
  created $dff cell `$procdff$1775' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_set_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1178$65'.
  created $dff cell `$procdff$1776' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_instreth_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1175$64'.
  created $dff cell `$procdff$1777' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_instret_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1172$63'.
  created $dff cell `$procdff$1778' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_cycleh_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1169$62'.
  created $dff cell `$procdff$1779' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_cycle_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1166$61'.
  created $dff cell `$procdff$1780' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_csr_clear_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1163$60'.
  created $dff cell `$procdff$1781' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_bne_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1160$59'.
  created $dff cell `$procdff$1782' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_bltu_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1157$58'.
  created $dff cell `$procdff$1783' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_blt_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1154$57'.
  created $dff cell `$procdff$1784' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_bgeu_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1151$56'.
  created $dff cell `$procdff$1785' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_bge_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1148$55'.
  created $dff cell `$procdff$1786' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_beq_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1145$54'.
  created $dff cell `$procdff$1787' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_auipc_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1142$53'.
  created $dff cell `$procdff$1788' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_andi_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1139$52'.
  created $dff cell `$procdff$1789' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_and_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1136$51'.
  created $dff cell `$procdff$1790' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_addi_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1133$50'.
  created $dff cell `$procdff$1791' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_is_add_instr_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1130$49'.
  created $dff cell `$procdff$1792' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_indirect_jump_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1127$48'.
  created $dff cell `$procdff$1793' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_illegal_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1124$47'.
  created $dff cell `$procdff$1794' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_illegal_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1123$46'.
  created $dff cell `$procdff$1795' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_fetch_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1120$45'.
  created $dff cell `$procdff$1796' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_div_mul_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1117$44'.
  created $dff cell `$procdff$1797' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_dest_reg_valid_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1114$43'.
  created $dff cell `$procdff$1798' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_dest_reg_valid_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1113$42'.
  created $dff cell `$procdff$1799' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_dest_reg_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1110$41'.
  created $dff cell `$procdff$1800' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_dest_reg_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1109$40'.
  created $dff cell `$procdff$1801' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_trap_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1106$39'.
  created $dff cell `$procdff$1802' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_timeh_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1103$38'.
  created $dff cell `$procdff$1803' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_time_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1100$37'.
  created $dff cell `$procdff$1804' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_instreth_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1097$36'.
  created $dff cell `$procdff$1805' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_instret_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1094$35'.
  created $dff cell `$procdff$1806' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_cycleh_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1091$34'.
  created $dff cell `$procdff$1807' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_csr_cycle_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1088$33'.
  created $dff cell `$procdff$1808' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_conditional_branch_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1085$32'.
  created $dff cell `$procdff$1809' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_commit_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1082$31'.
  created $dff cell `$procdff$1810' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_branch_target_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1079$30'.
  created $dff cell `$procdff$1811' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_branch_or_reset_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1076$29'.
  created $dff cell `$procdff$1812' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_branch_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1073$28'.
  created $dff cell `$procdff$1813' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_addr_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1070$27'.
  created $dff cell `$procdff$1814' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_aborting_trap_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1067$26'.
  created $dff cell `$procdff$1815' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_RemainingCyclesWithinTimeUnit_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1064$25'.
  created $dff cell `$procdff$1816' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Reg4Became45_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1061$24'.
  created $dff cell `$procdff$1817' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_ReachedEnd_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1058$23'.
  created $dff cell `$procdff$1818' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Pc_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1055$22'.
  created $dff cell `$procdff$1819' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Pc_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1054$21'.
  created $dff cell `$procdff$1820' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Pc_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1053$20'.
  created $dff cell `$procdff$1821' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Pc_a0' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1052$19'.
  created $dff cell `$procdff$1822' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_NoFetch_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1049$18'.
  created $dff cell `$procdff$1823' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_NoFetch_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1048$17'.
  created $dff cell `$procdff$1824' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_NoFetch_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1047$16'.
  created $dff cell `$procdff$1825' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_NoFetch_a0' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1046$15'.
  created $dff cell `$procdff$1826' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_GoodPathMask_a1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1043$14'.
  created $dff cell `$procdff$1827' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_GoodPathMask_a0' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1042$13'.
  created $dff cell `$procdff$1828' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_Cnt_n1' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1039$12'.
  created $dff cell `$procdff$1829' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_BranchState_a3' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1036$11'.
  created $dff cell `$procdff$1830' with positive edge clock.
Creating register for signal `\top.\FETCH_Instr_BranchState_a2' using process `\top.$proc$warp-v_risc-v_4-stage_gen.sv:1035$10'.
  created $dff cell `$procdff$1831' with positive edge clock.

2.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand.sv:54$1471'.
Removing empty process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand_gen.sv:37$1467'.
Removing empty process `$paramod\pseudo_rand\WIDTH=257.$proc$pseudo_rand_gen.sv:34$1466'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1324'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1324'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1321'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1321'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1165'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1162'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1162'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1159'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:944$1159'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1154'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage.sv:1650$1154'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1148'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage.sv:1650$1148'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1142'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage.sv:1650$1142'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage.sv:1650$1136'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage.sv:1650$1136'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1510$1088'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1510$1087'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1465$1086'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1462$1085'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1461$1084'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1465$1083'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1462$1082'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1461$1081'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1080'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1079'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1078'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1077'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1076'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1075'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1074'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1073'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1072'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1071'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1070'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1069'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1068'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1067'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1066'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1065'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1064'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1063'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1062'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1061'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1060'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1059'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1058'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1057'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1056'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1055'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1054'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1053'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1052'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1051'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1452$1050'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1409$1049'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1408$1048'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1407$1047'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1409$1046'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1408$1045'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1407$1044'.
Found and cleaned up 1 empty switch in `\top.$proc$warp-v_risc-v_4-stage.sv:1678$1020'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage.sv:1678$1020'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1502$166'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1499$165'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1496$164'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1493$163'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1490$162'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1487$161'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1484$160'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1481$159'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1443$158'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1442$157'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1439$156'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1438$155'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1435$154'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1434$153'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1431$152'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1430$151'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1427$150'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1426$149'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1420$147'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1419$146'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1399$145'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1391$144'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1388$143'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1385$142'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1382$141'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1379$140'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1376$139'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1373$138'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1370$137'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1367$136'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1364$135'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1363$134'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1360$133'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1359$132'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1356$131'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1355$130'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1354$129'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1351$128'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1348$127'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1347$126'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1346$125'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1345$124'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1342$123'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1341$122'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1338$121'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1337$120'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1334$119'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1331$118'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1328$117'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1325$116'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1322$115'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1319$114'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1318$113'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1315$112'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1312$111'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1309$110'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1306$109'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1303$108'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1300$107'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1297$106'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1296$105'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1293$104'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1292$103'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1289$102'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1286$101'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1283$100'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1280$99'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1277$98'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1274$97'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1271$96'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1268$95'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1265$94'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1262$93'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1259$92'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1256$91'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1253$90'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1250$89'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1247$88'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1244$87'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1241$86'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1238$85'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1235$84'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1232$83'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1229$82'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1226$81'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1223$80'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1220$79'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1217$78'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1214$77'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1211$76'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1208$75'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1205$74'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1202$73'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1199$72'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1196$71'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1193$70'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1190$69'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1187$68'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1184$67'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1181$66'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1178$65'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1175$64'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1172$63'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1169$62'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1166$61'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1163$60'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1160$59'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1157$58'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1154$57'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1151$56'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1148$55'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1145$54'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1142$53'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1139$52'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1136$51'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1133$50'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1130$49'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1127$48'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1124$47'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1123$46'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1120$45'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1117$44'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1114$43'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1113$42'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1110$41'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1109$40'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1106$39'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1103$38'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1100$37'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1097$36'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1094$35'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1091$34'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1088$33'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1085$32'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1082$31'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1079$30'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1076$29'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1073$28'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1070$27'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1067$26'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1064$25'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1061$24'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1058$23'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1055$22'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1054$21'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1053$20'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1052$19'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1049$18'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1048$17'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1047$16'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1046$15'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1043$14'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1042$13'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1039$12'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1036$11'.
Removing empty process `top.$proc$warp-v_risc-v_4-stage_gen.sv:1035$10'.
Cleaned up 9 empty switches.

2.4. Executing FLATTEN pass (flatten design).
Using template $paramod\pseudo_rand\WIDTH=257 for cells of type $paramod\pseudo_rand\WIDTH=257.
Using template clk_gate for cells of type clk_gate.
<suppressed ~18 debug messages>
No more expansions possible.
Deleting now unused module $paramod\pseudo_rand\WIDTH=257.
Deleting now unused module clk_gate.

2.5. Executing TRIBUF pass.

2.6. Executing DEMINOUT pass (demote inout ports to input or output).

2.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~95 debug messages>

2.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 88 unused cells and 632 unused wires.
<suppressed ~114 debug messages>

2.9. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.\FETCH_Instr_Regs_pending_a3[0] is used but has no driver.
found and reported 1 problems.

2.10. Executing OPT pass (performing simple optimizations).

2.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~606 debug messages>
Removed a total of 202 cells.

2.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 32/33 on $pmux $procmux$1472.
    dead port 32/33 on $pmux $procmux$1505.
    dead port 32/33 on $pmux $procmux$1538.
Removed 3 multiplexer ports.
<suppressed ~89 debug messages>

2.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $procmux$1584:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157
      New ports: A=1'0, B=1'1, Y=$0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0]
      New connections: $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [7:1] = { $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] $0$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$9_EN[7:0]$1157 [0] }
    Consolidated identical input bits for $mux cell $procmux$1590:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151
      New ports: A=1'0, B=1'1, Y=$0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0]
      New connections: $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [7:1] = { $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] $0$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$8_EN[7:0]$1151 [0] }
    Consolidated identical input bits for $mux cell $procmux$1596:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145
      New ports: A=1'0, B=1'1, Y=$0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0]
      New connections: $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [7:1] = { $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] $0$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$7_EN[7:0]$1145 [0] }
    Consolidated identical input bits for $mux cell $procmux$1602:
      Old ports: A=8'00000000, B=8'11111111, Y=$0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139
      New ports: A=1'0, B=1'1, Y=$0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0]
      New connections: $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [7:1] = { $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] $0$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$6_EN[7:0]$1139 [0] }
    Consolidated identical input bits for $mux cell $procmux$1608:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023
      New ports: A=1'0, B=1'1, Y=$0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0]
      New connections: $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [31:1] = { $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] $0$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$5_EN[31:0]$1023 [0] }
  Optimizing cells in module \top.
Performed a total of 5 changes.

2.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1702 ($dff) from module top.
Removing $procdff$1797 ($dff) from module top.
Replaced 2 DFF cells.

2.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 222 unused wires.
<suppressed ~35 debug messages>

2.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.9. Rerunning OPT passes. (Maybe there is more to do..)

2.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~89 debug messages>

2.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.13. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $procdff$1731 ($dff) from module top.
Replaced 1 DFF cells.

2.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

2.10.16. Rerunning OPT passes. (Maybe there is more to do..)

2.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~88 debug messages>

2.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

2.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

2.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.10.23. Finished OPT passes. (There is nothing left to do.)

2.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 27 address bits (of 32) from memory read port top.$memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1716$1027 (FETCH_Instr_Regs_value_a3).
Removed top 7 bits (of 8) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:411$169 ($add).
Removed top 28 bits (of 32) from port B of cell top.$lt$warp-v_risc-v_4-stage.sv:412$172 ($lt).
Removed top 3 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$179 ($mux).
Removed top 3 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$185 ($mux).
Removed top 3 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$192 ($mux).
Removed top 1 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$199 ($mux).
Removed top 2 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$207 ($mux).
Removed top 2 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$215 ($mux).
Removed top 2 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$223 ($mux).
Removed top 1 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$248 ($mux).
Removed top 29 bits (of 30) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:567$253 ($add).
Removed top 3 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$320 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$321 ($and).
Removed top 11 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$323 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$324 ($and).
Removed top 31 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$326 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$327 ($and).
Removed top 12 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$329 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$330 ($and).
Removed top 22 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$332 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$333 ($and).
Removed top 7 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$335 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$336 ($and).
Removed top 4 bits (of 32) from port A of cell top.$shr$warp-v_risc-v_4-stage.sv:615$338 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:615$339 ($and).
Removed top 1 bits (of 5) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:619$347 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:620$348 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:624$357 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:631$378 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:634$386 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:637$395 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:639$402 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:645$426 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:646$428 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:647$436 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:732$591 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:789$661 ($add).
Removed top 1 bits (of 2) from port B of cell top.$sub$warp-v_risc-v_4-stage.sv:790$664 ($sub).
Removed top 29 bits (of 32) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:968$711 ($add).
Removed top 26 bits (of 32) from port A of cell top.$sub$warp-v_risc-v_4-stage.sv:996$719 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$sub$warp-v_risc-v_4-stage.sv:996$719 ($sub).
Removed top 26 bits (of 32) from port A of cell top.$sub$warp-v_risc-v_4-stage.sv:998$724 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$sub$warp-v_risc-v_4-stage.sv:998$724 ($sub).
Removed top 31 bits (of 32) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:1000$731 ($mux).
Removed top 31 bits (of 32) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:1008$740 ($mux).
Removed cell top.$ternary$warp-v_risc-v_4-stage.sv:1013$744 ($mux).
Removed top 31 bits (of 32) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:1143$754 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1159$759 ($and).
Removed top 31 bits (of 32) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:1185$775 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1201$780 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1243$801 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1285$822 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1327$843 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1369$864 ($and).
Removed top 29 bits (of 30) from port B of cell top.$sub$warp-v_risc-v_4-stage.sv:1394$878 ($sub).
Removed top 63 bits (of 64) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:1397$882 ($add).
Removed top 63 bits (of 64) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:1398$883 ($add).
Removed top 63 bits (of 64) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:1399$884 ($add).
Removed top 3 bits (of 4) from port A of cell top.$shl$warp-v_risc-v_4-stage.sv:1479$896 ($shl).
Removed top 1 bits (of 2) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:1492$902 ($eq).
Removed top 16 bits (of 36) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:1504$917 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1536$935 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1537$937 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1538$939 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1539$941 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1540$943 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1543$949 ($and).
Removed top 31 bits (of 32) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:1554$971 ($and).
Removed top 29 bits (of 30) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:1589$1004 ($add).
Removed top 26 bits (of 32) from port B of cell top.$eq$warp-v_risc-v_4-stage.sv:1716$1028 ($eq).
Removed top 24 bits (of 32) from port B of cell top.$gt$warp-v_risc-v_4-stage.sv:1718$1036 ($gt).
Removed top 29 bits (of 32) from port B of cell top.$gt$warp-v_risc-v_4-stage.sv:1718$1037 ($gt).
Removed top 4 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1167 ($eq).
Removed top 3 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1172 ($eq).
Removed top 3 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1177 ($eq).
Removed top 2 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1182 ($eq).
Removed top 2 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1187 ($eq).
Removed top 2 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1192 ($eq).
Removed top 2 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1197 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1202 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1207 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1212 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1217 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1222 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1227 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1232 ($eq).
Removed top 1 bits (of 5) from port A of cell top.$eq$warp-v_risc-v_4-stage.sv:1685$1237 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1489_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1490_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1491_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1492_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1493_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1494_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1495_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1496_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1497_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1498_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1499_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1500_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$procmux$1501_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$procmux$1502_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$procmux$1503_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1522_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1523_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1524_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1525_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1526_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1527_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1528_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1529_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1530_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1531_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1532_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1533_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$procmux$1534_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$procmux$1535_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$procmux$1536_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1555_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1556_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1557_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1558_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1559_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1560_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1561_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$procmux$1562_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1563_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1564_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1565_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$procmux$1566_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$procmux$1567_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$procmux$1568_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$procmux$1569_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$1576_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$1577_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$1578_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$procmux$1579_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$procmux$1580_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$procmux$1581_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$procmux$1582_CMP0 ($eq).
Removed cell top.$procmux$1586 ($mux).
Removed cell top.$procmux$1588 ($mux).
Removed cell top.$procmux$1592 ($mux).
Removed cell top.$procmux$1594 ($mux).
Removed cell top.$procmux$1598 ($mux).
Removed cell top.$procmux$1600 ($mux).
Removed cell top.$procmux$1604 ($mux).
Removed cell top.$procmux$1606 ($mux).
Removed cell top.$procmux$1610 ($mux).
Removed cell top.$procmux$1612 ($mux).
Removed top 7 bits (of 8) from FF cell top.$procdff$1618 ($dff).
Removed top 7 bits (of 8) from FF cell top.$procdff$1621 ($dff).
Removed top 7 bits (of 8) from FF cell top.$procdff$1624 ($dff).
Removed top 7 bits (of 8) from FF cell top.$procdff$1627 ($dff).
Removed top 31 bits (of 32) from FF cell top.$procdff$1675 ($dff).
Removed top 20 bits (of 32) from FF cell top.$procdff$1723 ($dff).
Removed top 20 bits (of 32) from FF cell top.$procdff$1725 ($dff).
Removed top 25 bits (of 32) from FF cell top.$procdff$1814 ($dff).
Removed top 2 bits (of 4) from FF cell top.$procdff$1827 ($dff).
Removed top 1 bits (of 5) from FF cell top.$procdff$1828 ($dff).
Removed top 1 bits (of 5) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:531$250 ($mux).
Removed top 25 bits (of 32) from port Y of cell top.$add$warp-v_risc-v_4-stage.sv:1464$891 ($add).
Removed top 25 bits (of 32) from port A of cell top.$add$warp-v_risc-v_4-stage.sv:1464$891 ($add).
Removed top 25 bits (of 32) from port B of cell top.$add$warp-v_risc-v_4-stage.sv:1464$891 ($add).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$249 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$249 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$249 ($and).
Removed top 31 bits (of 32) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:999$729 ($mux).
Removed top 31 bits (of 32) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:1007$738 ($mux).
Removed top 25 bits (of 32) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:1464$890 ($mux).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$240 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$240 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$240 ($and).
Removed top 5 bits (of 12) from FF cell top.$procdff$1723 ($dff).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$232 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$232 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$232 ($and).
Removed top 1 bits (of 4) from mux cell top.$ternary$warp-v_risc-v_4-stage.sv:526$239 ($mux).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$224 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$224 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$224 ($and).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$216 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$216 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$216 ($and).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$208 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$208 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$208 ($and).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$200 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$200 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$200 ($and).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$193 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$193 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$193 ($and).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$186 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$186 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$186 ($and).
Removed top 1 bits (of 4) from port Y of cell top.$and$warp-v_risc-v_4-stage.sv:526$180 ($and).
Removed top 1 bits (of 4) from port A of cell top.$and$warp-v_risc-v_4-stage.sv:526$180 ($and).
Removed top 1 bits (of 4) from port B of cell top.$and$warp-v_risc-v_4-stage.sv:526$180 ($and).
Removed top 1 bits (of 4) from wire top.$and$warp-v_risc-v_4-stage.sv:526$180_Y.
Removed top 25 bits (of 32) from wire top.$ternary$warp-v_risc-v_4-stage.sv:1464$890_Y.
Removed top 3 bits (of 4) from wire top.$ternary$warp-v_risc-v_4-stage.sv:526$179_Y.
Removed top 1 bits (of 5) from wire top.FETCH_Instr_GoodPathMask_a0.
Removed top 1 bits (of 5) from wire top.FETCH_Instr_GoodPathMask_n1.
Removed top 25 bits (of 32) from wire top.FETCH_Instr_addr_a2.
Removed top 1 bits (of 5) from wire top.FETCH_Instr_next_good_path_mask_a0.
Removed top 25 bits (of 32) from wire top.FETCH_Instr_raw_s_imm_a2.
Removed top 31 bits (of 32) from wire top.FETCH_Instr_slt_rslt_a2.
Removed top 31 bits (of 32) from wire top.FETCH_Instr_sltiu_rslt_a2.

2.12. Executing PEEPOPT pass (run peephole optimizers).

2.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 21 unused wires.
<suppressed ~1 debug messages>

2.14. Executing SHARE pass (SAT-based resource sharing).
Found 8 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $shr$warp-v_risc-v_4-stage.sv:997$723 ($shr):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    Found 1 candidates: $shr$warp-v_risc-v_4-stage.sv:995$718
    Analyzing resource sharing with $shr$warp-v_risc-v_4-stage.sv:995$718 ($shr):
      Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
      Activation pattern for cell $shr$warp-v_risc-v_4-stage.sv:997$723: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Activation pattern for cell $shr$warp-v_risc-v_4-stage.sv:995$718: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \FETCH_Instr_second_issue_ld_a2 = 1'0
  Analyzing resource sharing options for $shr$warp-v_risc-v_4-stage.sv:995$718 ($shr):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    No candidates found.
  Analyzing resource sharing options for $shl$warp-v_risc-v_4-stage.sv:998$725 ($shl):
    Found 1 activation_patterns using ctrl signal { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 }.
    Found 1 candidates: $shl$warp-v_risc-v_4-stage.sv:996$720
    Analyzing resource sharing with $shl$warp-v_risc-v_4-stage.sv:996$720 ($shl):
      Found 1 activation_patterns using ctrl signal { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 }.
      Activation pattern for cell $shl$warp-v_risc-v_4-stage.sv:998$725: { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 } = 2'10
      Activation pattern for cell $shl$warp-v_risc-v_4-stage.sv:996$720: { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 } = 2'10
      Size of SAT problem: 0 cells, 9 variables, 18 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 } = 2'10
  Analyzing resource sharing options for $shl$warp-v_risc-v_4-stage.sv:996$720 ($shl):
    Found 1 activation_patterns using ctrl signal { \L1b_FETCH_Instr_Src[1].L1_reg_value_a2 [31] \FETCH_Instr_second_issue_ld_a2 }.
    No candidates found.
  Analyzing resource sharing options for $shl$warp-v_risc-v_4-stage.sv:994$717 ($shl):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    Found 1 candidates: $shl$warp-v_risc-v_4-stage.sv:1006$736
    Analyzing resource sharing with $shl$warp-v_risc-v_4-stage.sv:1006$736 ($shl):
      Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
      Activation pattern for cell $shl$warp-v_risc-v_4-stage.sv:994$717: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Activation pattern for cell $shl$warp-v_risc-v_4-stage.sv:1006$736: \FETCH_Instr_second_issue_ld_a2 = 1'0
      Size of SAT problem: 0 cells, 5 variables, 9 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: \FETCH_Instr_second_issue_ld_a2 = 1'0
  Analyzing resource sharing options for $shl$warp-v_risc-v_4-stage.sv:1006$736 ($shl):
    Found 1 activation_patterns using ctrl signal \FETCH_Instr_second_issue_ld_a2.
    No candidates found.
  Analyzing resource sharing options for $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1130 ($memrd):
    Found 1 activation_patterns using ctrl signal { $logic_and$warp-v_risc-v_4-stage.sv:819$1129_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1125_Y $eq$warp-v_risc-v_4-stage.sv:815$1121_Y }.
    Found 1 candidates: $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1115
    Analyzing resource sharing with $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1115 ($memrd):
      Found 1 activation_patterns using ctrl signal { $logic_and$warp-v_risc-v_4-stage.sv:819$1114_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1110_Y $eq$warp-v_risc-v_4-stage.sv:815$1106_Y }.
      Activation pattern for cell $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1130: { $logic_and$warp-v_risc-v_4-stage.sv:819$1129_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1125_Y $eq$warp-v_risc-v_4-stage.sv:815$1121_Y } = 3'000
      Activation pattern for cell $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1115: { $logic_and$warp-v_risc-v_4-stage.sv:819$1114_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1110_Y $eq$warp-v_risc-v_4-stage.sv:815$1106_Y } = 3'000
      Size of SAT problem: 14 cells, 176 variables, 441 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $logic_and$warp-v_risc-v_4-stage.sv:819$1129_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1125_Y $eq$warp-v_risc-v_4-stage.sv:815$1121_Y $logic_and$warp-v_risc-v_4-stage.sv:819$1114_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1110_Y $eq$warp-v_risc-v_4-stage.sv:815$1106_Y } = 6'000000
  Analyzing resource sharing options for $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1115 ($memrd):
    Found 1 activation_patterns using ctrl signal { $logic_and$warp-v_risc-v_4-stage.sv:819$1114_Y $logic_and$warp-v_risc-v_4-stage.sv:818$1110_Y $eq$warp-v_risc-v_4-stage.sv:815$1106_Y }.
    No candidates found.

2.15. Executing TECHMAP pass (map to technology primitives).

2.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

2.15.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~108 debug messages>

2.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:1003$734 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:1397$882 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:1398$883 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:1399$884 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:1464$891 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:1589$1004 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:411$169 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:567$253 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:789$661 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:890$687 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:893$689 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:958$709 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:967$710 ($add).
  creating $macc model for $add$warp-v_risc-v_4-stage.sv:968$711 ($add).
  creating $macc model for $sub$warp-v_risc-v_4-stage.sv:1003$733 ($sub).
  creating $macc model for $sub$warp-v_risc-v_4-stage.sv:1394$878 ($sub).
  creating $macc model for $sub$warp-v_risc-v_4-stage.sv:790$664 ($sub).
  creating $macc model for $sub$warp-v_risc-v_4-stage.sv:996$719 ($sub).
  creating $macc model for $sub$warp-v_risc-v_4-stage.sv:998$724 ($sub).
  creating $alu model for $macc $sub$warp-v_risc-v_4-stage.sv:998$724.
  creating $alu model for $macc $sub$warp-v_risc-v_4-stage.sv:996$719.
  creating $alu model for $macc $sub$warp-v_risc-v_4-stage.sv:790$664.
  creating $alu model for $macc $sub$warp-v_risc-v_4-stage.sv:1394$878.
  creating $alu model for $macc $sub$warp-v_risc-v_4-stage.sv:1003$733.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:968$711.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:967$710.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:958$709.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:893$689.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:890$687.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:789$661.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:567$253.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:411$169.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:1589$1004.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:1464$891.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:1399$884.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:1398$883.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:1397$882.
  creating $alu model for $macc $add$warp-v_risc-v_4-stage.sv:1003$734.
  creating $alu model for $gt$warp-v_risc-v_4-stage.sv:1718$1036 ($gt): new $alu
  creating $alu model for $gt$warp-v_risc-v_4-stage.sv:1718$1037 ($gt): new $alu
  creating $alu model for $lt$warp-v_risc-v_4-stage.sv:1000$730 ($lt): new $alu
  creating $alu model for $lt$warp-v_risc-v_4-stage.sv:1008$739 ($lt): merged with $sub$warp-v_risc-v_4-stage.sv:1003$733.
  creating $alu model for $lt$warp-v_risc-v_4-stage.sv:412$172 ($lt): new $alu
  creating $alu model for $lt$warp-v_risc-v_4-stage.sv:953$702 ($lt): new $alu
  creating $alu model for $eq$warp-v_risc-v_4-stage.sv:943$690 ($eq): merged with $sub$warp-v_risc-v_4-stage.sv:1003$733.
  creating $alu cell for $lt$warp-v_risc-v_4-stage.sv:953$702: $auto$alumacc.cc:485:replace_alu$1847
  creating $alu cell for $lt$warp-v_risc-v_4-stage.sv:412$172: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $gt$warp-v_risc-v_4-stage.sv:1718$1037: $auto$alumacc.cc:485:replace_alu$1863
  creating $alu cell for $gt$warp-v_risc-v_4-stage.sv:1718$1036: $auto$alumacc.cc:485:replace_alu$1868
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:1397$882: $auto$alumacc.cc:485:replace_alu$1873
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:1398$883: $auto$alumacc.cc:485:replace_alu$1876
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:1399$884: $auto$alumacc.cc:485:replace_alu$1879
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:1464$891: $auto$alumacc.cc:485:replace_alu$1882
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:1589$1004: $auto$alumacc.cc:485:replace_alu$1885
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:411$169: $auto$alumacc.cc:485:replace_alu$1888
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:567$253: $auto$alumacc.cc:485:replace_alu$1891
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:789$661: $auto$alumacc.cc:485:replace_alu$1894
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:890$687: $auto$alumacc.cc:485:replace_alu$1897
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:893$689: $auto$alumacc.cc:485:replace_alu$1900
  creating $alu cell for $lt$warp-v_risc-v_4-stage.sv:1000$730: $auto$alumacc.cc:485:replace_alu$1903
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:958$709: $auto$alumacc.cc:485:replace_alu$1908
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:967$710: $auto$alumacc.cc:485:replace_alu$1911
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:968$711: $auto$alumacc.cc:485:replace_alu$1914
  creating $alu cell for $add$warp-v_risc-v_4-stage.sv:1003$734: $auto$alumacc.cc:485:replace_alu$1917
  creating $alu cell for $sub$warp-v_risc-v_4-stage.sv:1003$733, $lt$warp-v_risc-v_4-stage.sv:1008$739, $eq$warp-v_risc-v_4-stage.sv:943$690: $auto$alumacc.cc:485:replace_alu$1920
  creating $alu cell for $sub$warp-v_risc-v_4-stage.sv:1394$878: $auto$alumacc.cc:485:replace_alu$1927
  creating $alu cell for $sub$warp-v_risc-v_4-stage.sv:790$664: $auto$alumacc.cc:485:replace_alu$1930
  creating $alu cell for $sub$warp-v_risc-v_4-stage.sv:996$719: $auto$alumacc.cc:485:replace_alu$1933
  creating $alu cell for $sub$warp-v_risc-v_4-stage.sv:998$724: $auto$alumacc.cc:485:replace_alu$1936
  created 24 $alu and 0 $macc cells.

2.19. Executing OPT pass (performing simple optimizations).

2.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

2.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

2.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

2.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 13 unused wires.
<suppressed ~3 debug messages>

2.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19.9. Rerunning OPT passes. (Maybe there is more to do..)

2.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~78 debug messages>

2.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.19.16. Finished OPT passes. (There is nothing left to do.)

2.20. Executing FSM pass (extract and optimize FSM).

2.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.FETCH_Instr_raw_a1 as FSM state register:
    Users of register don't seem to benefit from recoding.

2.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

2.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

2.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

2.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

2.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

2.21. Executing OPT pass (performing simple optimizations).

2.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.21.5. Finished fast OPT passes.

2.22. Executing MEMORY pass.

2.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

2.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$1327' in module `\top': merged $dff to cell.
Checking cell `$memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1328' in module `\top': merged $dff to cell.
Checking cell `$memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1329' in module `\top': merged $dff to cell.
Checking cell `$memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1330' in module `\top': merged $dff to cell.
Checking cell `$memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1331' in module `\top': merged $dff to cell.
Checking cell `$memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1716$1027' in module `\top': no (compatible) $dff found.
Checking cell `$memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1115' in module `\top': merged address $dff to cell.
Checking cell `$memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1130' in module `\top': merged address $dff to cell.
Checking cell `$memrd$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1135' in module `\top': merged data $dff to cell.
Checking cell `$memrd$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1141' in module `\top': merged data $dff to cell.
Checking cell `$memrd$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1147' in module `\top': merged data $dff to cell.
Checking cell `$memrd$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1153' in module `\top': merged data $dff to cell.

2.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 12 unused cells and 21 unused wires.
<suppressed ~19 debug messages>

2.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

2.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\FETCH_Instr_Regs_value_a3' in module `\top':
  $memwr$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1680$1327 ($memwr)
  $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:1716$1027 ($memrd)
  $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1115 ($memrd)
  $memrd$\FETCH_Instr_Regs_value_a3$warp-v_risc-v_4-stage.sv:821$1130 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3' in module `\top':
  $memwr$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1328 ($memwr)
  $memrd$\L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1135 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3' in module `\top':
  $memwr$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1329 ($memwr)
  $memrd$\L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1141 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3' in module `\top':
  $memwr$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1330 ($memwr)
  $memrd$\L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1147 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3' in module `\top':
  $memwr$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1652$1331 ($memwr)
  $memrd$\L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3$warp-v_risc-v_4-stage.sv:1638$1153 ($memrd)

2.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.FETCH_Instr_Regs_value_a3:
  Properties: ports=4 bits=992 rports=3 wports=1 dbits=32 abits=5 words=31
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=225 dwaste=0 bwaste=3600 waste=3600 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M0 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=481 dwaste=0 bwaste=3848 waste=3848 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=993 dwaste=0 bwaste=3972 waste=3972 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain !~async~.
        Bram port A1.1 has incompatible clock type.
        Failed to map read port #0.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2017 dwaste=0 bwaste=4034 waste=4034 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  No acceptable bram resources found.
Processing top.L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3:
  Properties: ports=2 bits=256 rports=1 wports=1 dbits=8 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=8 bwaste=3840 waste=3840 efficiency=6
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 3 rules:
    Efficiency for rule 2.2: efficiency=3, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=6, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=1, acells=1
    Selected rule 2.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: L1_FETCH_Instr_Bank[0].L1_Mem_Value_a3.0.0.0
Processing top.L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3:
  Properties: ports=2 bits=256 rports=1 wports=1 dbits=8 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=8 bwaste=3840 waste=3840 efficiency=6
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 3 rules:
    Efficiency for rule 2.2: efficiency=3, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=6, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=1, acells=1
    Selected rule 2.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: L1_FETCH_Instr_Bank[1].L1_Mem_Value_a3.0.0.0
Processing top.L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3:
  Properties: ports=2 bits=256 rports=1 wports=1 dbits=8 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=8 bwaste=3840 waste=3840 efficiency=6
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 3 rules:
    Efficiency for rule 2.2: efficiency=3, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=6, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=1, acells=1
    Selected rule 2.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: L1_FETCH_Instr_Bank[2].L1_Mem_Value_a3.0.0.0
Processing top.L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3:
  Properties: ports=2 bits=256 rports=1 wports=1 dbits=8 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=8 bwaste=3840 waste=3840 efficiency=6
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3840 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Updated properties: dups=1 waste=3968 efficiency=3
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #2 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Selecting best of 3 rules:
    Efficiency for rule 2.2: efficiency=3, cells=2, acells=1
    Efficiency for rule 2.1: efficiency=6, cells=1, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=1, acells=1
    Selected rule 2.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Creating $__ICE40_RAM4K_M123 cell at grid position <0 0 0>: L1_FETCH_Instr_Bank[3].L1_Mem_Value_a3.0.0.0

2.25. Executing TECHMAP pass (map to technology primitives).

2.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

2.25.2. Continuing TECHMAP pass.
Using template $paramod\$__ICE40_RAM4K_M123\CFG_ABITS=9\CFG_DBITS=8\CLKPOL2=1\CLKPOL3=1 for cells of type $__ICE40_RAM4K_M123.
Using template $paramod$66c3fa288a62dc560ce3ddd26d81551ab195105f\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~74 debug messages>

2.26. Executing ICE40_BRAMINIT pass.

2.27. Executing OPT pass (performing simple optimizations).

2.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~335 debug messages>

2.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~20 debug messages>
Removed a total of 6 cells.

2.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

2.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 9 unused cells and 216 unused wires.
<suppressed ~23 debug messages>

2.27.5. Finished fast OPT passes.

2.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \FETCH_Instr_Regs_value_a3 in module \top:
  created 31 $dff cells and 0 static cells of width 32.
  read interface: 2 $dff and 93 $mux cells.
  write interface: 31 write mux blocks.

2.29. Executing OPT pass (performing simple optimizations).

2.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~251 debug messages>

2.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~546 debug messages>
Removed a total of 182 cells.

2.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~104 debug messages>

2.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $procmux$1572:
      Old ports: A=25363, B=320'00000000000100000110000010010011000000001010000001100001000100110000000000000000011000011001001100000000001100001000000110110011000000000011001100100000001000110000000000010000100000001001001100000000010000110000001100010011111111100010000011001000111000111111111111000011001000100000001111111100001000001101101011100011, Y=\FETCH_Instr_raw_a0
      New ports: A=18'000000000110110001, B=180'000000100110001001000101000110010001000000000110011001000001101000011011000001110010000010000000101000001001000010010000110001110001001100001110111110010010100000100001001101101110, Y={ \FETCH_Instr_raw_a0 [26:20] \FETCH_Instr_raw_a0 [16:12] \FETCH_Instr_raw_a0 [9:4] }
      New connections: { \FETCH_Instr_raw_a0 [31:27] \FETCH_Instr_raw_a0 [19:17] \FETCH_Instr_raw_a0 [11:10] \FETCH_Instr_raw_a0 [3:0] } = { \FETCH_Instr_raw_a0 [26] \FETCH_Instr_raw_a0 [26] \FETCH_Instr_raw_a0 [26] \FETCH_Instr_raw_a0 [26] \FETCH_Instr_raw_a0 [26] 2'00 \FETCH_Instr_raw_a0 [16] \FETCH_Instr_raw_a0 [6] 5'00011 }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:1475$893:
      Old ports: A={ \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] }, B={ \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [15:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [15:0] }, Y=$ternary$warp-v_risc-v_4-stage.sv:1475$893_Y
      New ports: A=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0], B=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [15:8], Y=$ternary$warp-v_risc-v_4-stage.sv:1475$893_Y [15:8]
      New connections: { $ternary$warp-v_risc-v_4-stage.sv:1475$893_Y [31:16] $ternary$warp-v_risc-v_4-stage.sv:1475$893_Y [7:0] } = { $ternary$warp-v_risc-v_4-stage.sv:1475$893_Y [15:8] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:1478$895:
      Old ports: A=4'0011, B=4'1100, Y=$ternary$warp-v_risc-v_4-stage.sv:1478$895_Y
      New ports: A=2'01, B=2'10, Y={ $ternary$warp-v_risc-v_4-stage.sv:1478$895_Y [2] $ternary$warp-v_risc-v_4-stage.sv:1478$895_Y [0] }
      New connections: { $ternary$warp-v_risc-v_4-stage.sv:1478$895_Y [3] $ternary$warp-v_risc-v_4-stage.sv:1478$895_Y [1] } = { $ternary$warp-v_risc-v_4-stage.sv:1478$895_Y [2] $ternary$warp-v_risc-v_4-stage.sv:1478$895_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:1500$910:
      Old ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:0] 4'0011 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:16] 4'1100 }, Y=$ternary$warp-v_risc-v_4-stage.sv:1500$910_Y
      New ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:0] 2'01 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:16] 2'10 }, Y={ $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [19:4] $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [2] $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [0] }
      New connections: { $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [3] $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [1] } = { $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [2] $ternary$warp-v_risc-v_4-stage.sv:1500$910_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:1504$914:
      Old ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:24] 4'1000 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [23:16] 4'0100 }, Y=$ternary$warp-v_risc-v_4-stage.sv:1504$914_Y
      New ports: A={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [31:24] 2'10 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [23:16] 2'01 }, Y=$ternary$warp-v_risc-v_4-stage.sv:1504$914_Y [11:2]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:1504$914_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:526$199:
      Old ports: A=3'111, B=3'000, Y=$ternary$warp-v_risc-v_4-stage.sv:526$199_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$warp-v_risc-v_4-stage.sv:526$199_Y [0]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:526$199_Y [2:1] = { $ternary$warp-v_risc-v_4-stage.sv:526$199_Y [0] $ternary$warp-v_risc-v_4-stage.sv:526$199_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:526$207:
      Old ports: A=2'11, B=2'00, Y=$ternary$warp-v_risc-v_4-stage.sv:526$207_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$ternary$warp-v_risc-v_4-stage.sv:526$207_Y [0]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:526$207_Y [1] = $ternary$warp-v_risc-v_4-stage.sv:526$207_Y [0]
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:526$215:
      Old ports: A=2'11, B=2'00, Y=$ternary$warp-v_risc-v_4-stage.sv:526$215_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$ternary$warp-v_risc-v_4-stage.sv:526$215_Y [0]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:526$215_Y [1] = $ternary$warp-v_risc-v_4-stage.sv:526$215_Y [0]
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:526$223:
      Old ports: A=2'11, B=2'00, Y=$ternary$warp-v_risc-v_4-stage.sv:526$223_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$ternary$warp-v_risc-v_4-stage.sv:526$223_Y [0]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:526$223_Y [1] = $ternary$warp-v_risc-v_4-stage.sv:526$223_Y [0]
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:526$239:
      Old ports: A=3'111, B=3'000, Y=$ternary$warp-v_risc-v_4-stage.sv:526$239_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$warp-v_risc-v_4-stage.sv:526$239_Y [0]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:526$239_Y [2:1] = { $ternary$warp-v_risc-v_4-stage.sv:526$239_Y [0] $ternary$warp-v_risc-v_4-stage.sv:526$239_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:526$248:
      Old ports: A=3'111, B=3'000, Y=$ternary$warp-v_risc-v_4-stage.sv:526$248_Y [2:0]
      New ports: A=1'1, B=1'0, Y=$ternary$warp-v_risc-v_4-stage.sv:526$248_Y [0]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:526$248_Y [2:1] = { $ternary$warp-v_risc-v_4-stage.sv:526$248_Y [0] $ternary$warp-v_risc-v_4-stage.sv:526$248_Y [0] }
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:573$308:
      Old ports: A={ \FETCH_Instr_pc_inc_a0 1'0 }, B={ $ternary$warp-v_risc-v_4-stage.sv:572$307_Y 1'0 }, Y=$ternary$warp-v_risc-v_4-stage.sv:573$308_Y
      New ports: A=\FETCH_Instr_pc_inc_a0, B=$ternary$warp-v_risc-v_4-stage.sv:572$307_Y, Y=$ternary$warp-v_risc-v_4-stage.sv:573$308_Y [30:1]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:573$308_Y [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:1475$894:
      Old ports: A=$ternary$warp-v_risc-v_4-stage.sv:1475$893_Y, B=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2, Y=\FETCH_Instr_st_value_a2
      New ports: A={ $ternary$warp-v_risc-v_4-stage.sv:1475$893_Y [15:8] \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0] $ternary$warp-v_risc-v_4-stage.sv:1475$893_Y [15:8] }, B=\L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [31:8], Y=\FETCH_Instr_st_value_a2 [31:8]
      New connections: \FETCH_Instr_st_value_a2 [7:0] = \L1b_FETCH_Instr_Src[2].L1_reg_value_a2 [7:0]
    Consolidated identical input bits for $mux cell $ternary$warp-v_risc-v_4-stage.sv:1504$915:
      Old ports: A=$ternary$warp-v_risc-v_4-stage.sv:1504$914_Y, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:8] 4'0010 }, Y=$ternary$warp-v_risc-v_4-stage.sv:1504$915_Y
      New ports: A={ $ternary$warp-v_risc-v_4-stage.sv:1504$914_Y [11:2] 1'0 }, B={ \FETCH_Instr_OrigLoadInst_ld_value_a2 [15:8] 3'001 }, Y=$ternary$warp-v_risc-v_4-stage.sv:1504$915_Y [11:1]
      New connections: $ternary$warp-v_risc-v_4-stage.sv:1504$915_Y [0] = 1'0
  Optimizing cells in module \top.
Performed a total of 14 changes.

2.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 412 unused wires.
<suppressed ~1 debug messages>

2.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.9. Rerunning OPT passes. (Maybe there is more to do..)

2.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~104 debug messages>

2.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

2.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.29.16. Finished OPT passes. (There is nothing left to do.)

2.30. Executing ICE40_WRAPCARRY pass (wrap carries).

2.31. Executing TECHMAP pass (map to technology primitives).

2.31.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

2.31.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

2.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Running "alumacc" on wrapper $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using template $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47 for cells of type $extern:wrap:$sub:A_SIGNED=0:A_WIDTH=5:B_SIGNED=0:B_WIDTH=5:Y_WIDTH=5:394426c56d1a028ba8fdd5469b163e04011def47.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod$constmap:b87fc6de3b7556c9fd5ea9f84e0859e5c4aad4fd$paramod$5ba848923882da847d4ec7f8a13ecabd1de35e7b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:c5cb0bcb45cb46679efe31170ad7858fad06d350$paramod$7855d0f82674869fc7bf5b8f2f85c6de983de090\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:f3dca8252fd892900bdea2fb6cc1f176c7dc8d9e$paramod$2e1681a48af0eaf6b0882c1ddc28aceae8864135\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:31e83aedc15801928e265c51f9cfca4592833697$paramod$30045fc339621e361b705a64dbad009d04af857b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:12937128d11e822c43a420c0b570ebef9468fc6d$paramod$3037a4ee30812d476c5c585ee7a3b39bff0451aa\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:2e1784b4be297eebbd30c7a3c4345e7913e623bc$paramod$73aa4fa61bbd731bcf4e3bfbbbd96ab8f4790907\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:00d293da10fc58e82349cc589ab0147b6a5ed13f$paramod$cde67c1214be608049251e59770f83bacc1487b4\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=6\Y_WIDTH=7 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=30\B_WIDTH=1\Y_WIDTH=30 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:092011f7d4aee5efbb37c41f16125a055a79abd7$paramod$8669418c886d3bd260d664481583c1c71dfc3c9b\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:092011f7d4aee5efbb37c41f16125a055a79abd7$paramod$d30adaad63cfacdc6590dcd2cdfa749bd3a125cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=5\Y_WIDTH=7 for cells of type $alu.
Using template $paramod$constmap:b31c60e8fe29b85a66243f8c87fa4c3b0bd86537$paramod$8c0dd5ff1d42c73e7701ae7a633831fc809160d1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$770435fdf938ca78b5f1ecab2552fff9f675f686\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:4621fcf06a436d1e2a4080e2ed9866a7d07a6e07$paramod$887c9fe2c55be14c90171bd2ff359c086a0858d7\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=7\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$9b74a473ccd678a23e1df4cc12019cbbece20051\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=30 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=18\S_WIDTH=10 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~7917 debug messages>

2.32. Executing OPT pass (performing simple optimizations).

2.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2016 debug messages>

2.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4809 debug messages>
Removed a total of 1603 cells.

2.32.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$22316 ($_DFF_P_) from module top.
Removing $auto$simplemap.cc:420:simplemap_dff$22334 ($_DFF_P_) from module top.
Replaced 2 DFF cells.

2.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 649 unused cells and 1296 unused wires.
<suppressed ~651 debug messages>

2.32.5. Rerunning OPT passes. (Removed registers in this run.)

2.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~205 debug messages>

2.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~138 debug messages>
Removed a total of 46 cells.

2.32.8. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$22298 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

2.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 113 unused wires.
<suppressed ~2 debug messages>

2.32.10. Rerunning OPT passes. (Removed registers in this run.)

2.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~256 debug messages>

2.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.32.13. Executing OPT_RMDFF pass (remove dff with constant values).

2.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 30 unused cells and 19 unused wires.
<suppressed ~32 debug messages>

2.32.15. Finished fast OPT passes.

2.33. Executing ICE40_OPT pass (performing simple optimizations).

2.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1852.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1852.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1863.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1868.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1863.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1873.slice[0].carry: CO=\FETCH_Instr_csr_cycle_a2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1876.slice[0].carry: CO=\FETCH_Instr_csr_time_a2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1879.slice[0].carry: CO=\FETCH_Instr_csr_instret_a2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1885.slice[0].carry: CO=\FETCH_Instr_Pc_a2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1888.slice[0].carry: CO=\FETCH_Instr_Cnt_n1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1891.slice[0].carry: CO=\FETCH_Instr_Pc_a0 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1927.slice[0].carry: CO=\FETCH_Instr_RemainingCyclesWithinTimeUnit_a2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1933.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1903.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1933.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1933.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1936.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1847.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1936.slice[5].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1936.slice[6].carry: CO=$auto$alumacc.cc:485:replace_alu$1936.C [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.slice[0].carry: CO=\FETCH_Instr_raw_a0 [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.slice[3].carry: CO=$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.slice[4].carry: CO=$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$techmap$auto$memory_map.cc:196:handle_cell$2338.$auto$alumacc.cc:485:replace_alu$3594.slice[0].carry: CO=\FETCH_Instr_raw_a0 [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$techmap$auto$memory_map.cc:285:handle_cell$3035.$auto$alumacc.cc:485:replace_alu$3594.slice[0].carry: CO=\FETCH_Instr_dest_reg_a3 [0]

2.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~64 debug messages>

2.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

2.33.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 5 unused wires.
<suppressed ~5 debug messages>

2.33.6. Rerunning OPT passes. (Removed registers in this run.)

2.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1863.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1863.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[1].carry: CO=1'0

2.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.
<suppressed ~2 debug messages>

2.33.12. Rerunning OPT passes. (Removed registers in this run.)

2.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[2].carry: CO=1'0

2.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.18. Rerunning OPT passes. (Removed registers in this run.)

2.33.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[3].carry: CO=1'0

2.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.22. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.24. Rerunning OPT passes. (Removed registers in this run.)

2.33.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[4].carry: CO=1'0

2.33.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.28. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.30. Rerunning OPT passes. (Removed registers in this run.)

2.33.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[5].carry: CO=1'0

2.33.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.34. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.36. Rerunning OPT passes. (Removed registers in this run.)

2.33.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[6].carry: CO=1'0

2.33.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.40. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.42. Rerunning OPT passes. (Removed registers in this run.)

2.33.43. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[7].carry: CO=1'0

2.33.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.46. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.48. Rerunning OPT passes. (Removed registers in this run.)

2.33.49. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[8].carry: CO=1'0

2.33.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.52. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.54. Rerunning OPT passes. (Removed registers in this run.)

2.33.55. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$1911.slice[9].carry: CO=1'0

2.33.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.58. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

2.33.60. Rerunning OPT passes. (Removed registers in this run.)

2.33.61. Running ICE40 specific optimizations.

2.33.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

2.33.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.64. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.66. Rerunning OPT passes. (Removed registers in this run.)

2.33.67. Running ICE40 specific optimizations.

2.33.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.33.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.33.70. Executing OPT_RMDFF pass (remove dff with constant values).

2.33.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.33.72. Finished OPT passes. (There is nothing left to do.)

2.34. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

2.35. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13596 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [0] -> \FETCH_Instr_Regs_value_a3[5] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13597 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [1] -> \FETCH_Instr_Regs_value_a3[5] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13598 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [2] -> \FETCH_Instr_Regs_value_a3[5] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13599 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [3] -> \FETCH_Instr_Regs_value_a3[5] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13600 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [4] -> \FETCH_Instr_Regs_value_a3[5] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13601 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [5] -> \FETCH_Instr_Regs_value_a3[5] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13602 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [6] -> \FETCH_Instr_Regs_value_a3[5] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13603 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [7] -> \FETCH_Instr_Regs_value_a3[5] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13604 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [8] -> \FETCH_Instr_Regs_value_a3[5] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13605 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [9] -> \FETCH_Instr_Regs_value_a3[5] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13606 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [10] -> \FETCH_Instr_Regs_value_a3[5] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13607 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [11] -> \FETCH_Instr_Regs_value_a3[5] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13608 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [12] -> \FETCH_Instr_Regs_value_a3[5] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13609 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [13] -> \FETCH_Instr_Regs_value_a3[5] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13610 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [14] -> \FETCH_Instr_Regs_value_a3[5] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13611 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [15] -> \FETCH_Instr_Regs_value_a3[5] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13612 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [16] -> \FETCH_Instr_Regs_value_a3[5] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13613 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [17] -> \FETCH_Instr_Regs_value_a3[5] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13614 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [18] -> \FETCH_Instr_Regs_value_a3[5] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13615 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [19] -> \FETCH_Instr_Regs_value_a3[5] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13616 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [20] -> \FETCH_Instr_Regs_value_a3[5] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13617 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [21] -> \FETCH_Instr_Regs_value_a3[5] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13618 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [22] -> \FETCH_Instr_Regs_value_a3[5] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13619 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [23] -> \FETCH_Instr_Regs_value_a3[5] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13620 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [24] -> \FETCH_Instr_Regs_value_a3[5] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13621 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [25] -> \FETCH_Instr_Regs_value_a3[5] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13622 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [26] -> \FETCH_Instr_Regs_value_a3[5] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13623 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [27] -> \FETCH_Instr_Regs_value_a3[5] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13624 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [28] -> \FETCH_Instr_Regs_value_a3[5] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13625 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [29] -> \FETCH_Instr_Regs_value_a3[5] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13626 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [30] -> \FETCH_Instr_Regs_value_a3[5] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13627 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[5][0][0]$y$2578 [31] -> \FETCH_Instr_Regs_value_a3[5] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13952 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [0] -> \FETCH_Instr_Regs_value_a3[0] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13953 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [1] -> \FETCH_Instr_Regs_value_a3[0] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13954 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [2] -> \FETCH_Instr_Regs_value_a3[0] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13955 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [3] -> \FETCH_Instr_Regs_value_a3[0] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13956 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [4] -> \FETCH_Instr_Regs_value_a3[0] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13957 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [5] -> \FETCH_Instr_Regs_value_a3[0] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13958 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [6] -> \FETCH_Instr_Regs_value_a3[0] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13959 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [7] -> \FETCH_Instr_Regs_value_a3[0] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13960 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [8] -> \FETCH_Instr_Regs_value_a3[0] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13961 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [9] -> \FETCH_Instr_Regs_value_a3[0] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13962 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [10] -> \FETCH_Instr_Regs_value_a3[0] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13963 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [11] -> \FETCH_Instr_Regs_value_a3[0] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13964 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [12] -> \FETCH_Instr_Regs_value_a3[0] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13965 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [13] -> \FETCH_Instr_Regs_value_a3[0] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13966 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [14] -> \FETCH_Instr_Regs_value_a3[0] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13967 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [15] -> \FETCH_Instr_Regs_value_a3[0] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13968 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [16] -> \FETCH_Instr_Regs_value_a3[0] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13969 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [17] -> \FETCH_Instr_Regs_value_a3[0] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13970 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [18] -> \FETCH_Instr_Regs_value_a3[0] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13971 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [19] -> \FETCH_Instr_Regs_value_a3[0] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13972 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [20] -> \FETCH_Instr_Regs_value_a3[0] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13973 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [21] -> \FETCH_Instr_Regs_value_a3[0] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13974 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [22] -> \FETCH_Instr_Regs_value_a3[0] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13975 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [23] -> \FETCH_Instr_Regs_value_a3[0] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13976 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [24] -> \FETCH_Instr_Regs_value_a3[0] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13977 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [25] -> \FETCH_Instr_Regs_value_a3[0] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13978 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [26] -> \FETCH_Instr_Regs_value_a3[0] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13979 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [27] -> \FETCH_Instr_Regs_value_a3[0] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13980 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [28] -> \FETCH_Instr_Regs_value_a3[0] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13981 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [29] -> \FETCH_Instr_Regs_value_a3[0] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13982 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [30] -> \FETCH_Instr_Regs_value_a3[0] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$13983 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[0][0][0]$y$2458 [31] -> \FETCH_Instr_Regs_value_a3[0] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14050 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [0] -> \FETCH_Instr_Regs_value_a3[4] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14051 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [1] -> \FETCH_Instr_Regs_value_a3[4] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14052 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [2] -> \FETCH_Instr_Regs_value_a3[4] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14053 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [3] -> \FETCH_Instr_Regs_value_a3[4] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14054 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [4] -> \FETCH_Instr_Regs_value_a3[4] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14055 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [5] -> \FETCH_Instr_Regs_value_a3[4] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14056 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [6] -> \FETCH_Instr_Regs_value_a3[4] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14057 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [7] -> \FETCH_Instr_Regs_value_a3[4] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14058 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [8] -> \FETCH_Instr_Regs_value_a3[4] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14059 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [9] -> \FETCH_Instr_Regs_value_a3[4] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14060 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [10] -> \FETCH_Instr_Regs_value_a3[4] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14061 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [11] -> \FETCH_Instr_Regs_value_a3[4] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14062 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [12] -> \FETCH_Instr_Regs_value_a3[4] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14063 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [13] -> \FETCH_Instr_Regs_value_a3[4] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14064 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [14] -> \FETCH_Instr_Regs_value_a3[4] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14065 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [15] -> \FETCH_Instr_Regs_value_a3[4] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14066 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [16] -> \FETCH_Instr_Regs_value_a3[4] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14067 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [17] -> \FETCH_Instr_Regs_value_a3[4] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14068 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [18] -> \FETCH_Instr_Regs_value_a3[4] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14069 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [19] -> \FETCH_Instr_Regs_value_a3[4] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14070 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [20] -> \FETCH_Instr_Regs_value_a3[4] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14071 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [21] -> \FETCH_Instr_Regs_value_a3[4] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14072 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [22] -> \FETCH_Instr_Regs_value_a3[4] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14073 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [23] -> \FETCH_Instr_Regs_value_a3[4] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14074 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [24] -> \FETCH_Instr_Regs_value_a3[4] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14075 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [25] -> \FETCH_Instr_Regs_value_a3[4] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14076 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [26] -> \FETCH_Instr_Regs_value_a3[4] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14077 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [27] -> \FETCH_Instr_Regs_value_a3[4] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14078 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [28] -> \FETCH_Instr_Regs_value_a3[4] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14079 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [29] -> \FETCH_Instr_Regs_value_a3[4] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14080 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [30] -> \FETCH_Instr_Regs_value_a3[4] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14081 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[4][0][0]$y$2554 [31] -> \FETCH_Instr_Regs_value_a3[4] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14960 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [0] -> \FETCH_Instr_Regs_value_a3[3] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14961 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [1] -> \FETCH_Instr_Regs_value_a3[3] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14962 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [2] -> \FETCH_Instr_Regs_value_a3[3] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14963 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [3] -> \FETCH_Instr_Regs_value_a3[3] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14964 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [4] -> \FETCH_Instr_Regs_value_a3[3] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14965 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [5] -> \FETCH_Instr_Regs_value_a3[3] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14966 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [6] -> \FETCH_Instr_Regs_value_a3[3] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14967 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [7] -> \FETCH_Instr_Regs_value_a3[3] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14968 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [8] -> \FETCH_Instr_Regs_value_a3[3] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14969 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [9] -> \FETCH_Instr_Regs_value_a3[3] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14970 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [10] -> \FETCH_Instr_Regs_value_a3[3] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14971 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [11] -> \FETCH_Instr_Regs_value_a3[3] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14972 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [12] -> \FETCH_Instr_Regs_value_a3[3] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14973 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [13] -> \FETCH_Instr_Regs_value_a3[3] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14974 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [14] -> \FETCH_Instr_Regs_value_a3[3] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14975 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [15] -> \FETCH_Instr_Regs_value_a3[3] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14976 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [16] -> \FETCH_Instr_Regs_value_a3[3] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14977 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [17] -> \FETCH_Instr_Regs_value_a3[3] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14978 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [18] -> \FETCH_Instr_Regs_value_a3[3] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14979 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [19] -> \FETCH_Instr_Regs_value_a3[3] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14980 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [20] -> \FETCH_Instr_Regs_value_a3[3] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14981 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [21] -> \FETCH_Instr_Regs_value_a3[3] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14982 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [22] -> \FETCH_Instr_Regs_value_a3[3] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14983 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [23] -> \FETCH_Instr_Regs_value_a3[3] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14984 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [24] -> \FETCH_Instr_Regs_value_a3[3] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14985 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [25] -> \FETCH_Instr_Regs_value_a3[3] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14986 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [26] -> \FETCH_Instr_Regs_value_a3[3] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14987 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [27] -> \FETCH_Instr_Regs_value_a3[3] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14988 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [28] -> \FETCH_Instr_Regs_value_a3[3] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14989 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [29] -> \FETCH_Instr_Regs_value_a3[3] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14990 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [30] -> \FETCH_Instr_Regs_value_a3[3] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14991 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[3][0][0]$y$2530 [31] -> \FETCH_Instr_Regs_value_a3[3] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16219 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [0] -> \FETCH_Instr_Regs_value_a3[10] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16220 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [1] -> \FETCH_Instr_Regs_value_a3[10] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16221 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [2] -> \FETCH_Instr_Regs_value_a3[10] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16222 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [3] -> \FETCH_Instr_Regs_value_a3[10] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16223 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [4] -> \FETCH_Instr_Regs_value_a3[10] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16224 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [5] -> \FETCH_Instr_Regs_value_a3[10] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16225 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [6] -> \FETCH_Instr_Regs_value_a3[10] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16226 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [7] -> \FETCH_Instr_Regs_value_a3[10] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16227 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [8] -> \FETCH_Instr_Regs_value_a3[10] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16228 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [9] -> \FETCH_Instr_Regs_value_a3[10] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16229 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [10] -> \FETCH_Instr_Regs_value_a3[10] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16230 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [11] -> \FETCH_Instr_Regs_value_a3[10] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16231 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [12] -> \FETCH_Instr_Regs_value_a3[10] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16232 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [13] -> \FETCH_Instr_Regs_value_a3[10] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16233 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [14] -> \FETCH_Instr_Regs_value_a3[10] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16234 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [15] -> \FETCH_Instr_Regs_value_a3[10] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16235 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [16] -> \FETCH_Instr_Regs_value_a3[10] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16236 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [17] -> \FETCH_Instr_Regs_value_a3[10] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16237 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [18] -> \FETCH_Instr_Regs_value_a3[10] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16238 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [19] -> \FETCH_Instr_Regs_value_a3[10] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16239 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [20] -> \FETCH_Instr_Regs_value_a3[10] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16240 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [21] -> \FETCH_Instr_Regs_value_a3[10] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16241 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [22] -> \FETCH_Instr_Regs_value_a3[10] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16242 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [23] -> \FETCH_Instr_Regs_value_a3[10] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16243 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [24] -> \FETCH_Instr_Regs_value_a3[10] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16244 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [25] -> \FETCH_Instr_Regs_value_a3[10] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16245 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [26] -> \FETCH_Instr_Regs_value_a3[10] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16246 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [27] -> \FETCH_Instr_Regs_value_a3[10] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16247 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [28] -> \FETCH_Instr_Regs_value_a3[10] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16248 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [29] -> \FETCH_Instr_Regs_value_a3[10] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16249 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [30] -> \FETCH_Instr_Regs_value_a3[10] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16250 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[10][0][0]$y$2698 [31] -> \FETCH_Instr_Regs_value_a3[10] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16315 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [0] -> \FETCH_Instr_Regs_value_a3[9] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16316 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [1] -> \FETCH_Instr_Regs_value_a3[9] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16317 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [2] -> \FETCH_Instr_Regs_value_a3[9] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16318 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [3] -> \FETCH_Instr_Regs_value_a3[9] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16319 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [4] -> \FETCH_Instr_Regs_value_a3[9] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16320 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [5] -> \FETCH_Instr_Regs_value_a3[9] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16321 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [6] -> \FETCH_Instr_Regs_value_a3[9] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16322 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [7] -> \FETCH_Instr_Regs_value_a3[9] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16323 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [8] -> \FETCH_Instr_Regs_value_a3[9] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16324 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [9] -> \FETCH_Instr_Regs_value_a3[9] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16325 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [10] -> \FETCH_Instr_Regs_value_a3[9] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16326 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [11] -> \FETCH_Instr_Regs_value_a3[9] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16327 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [12] -> \FETCH_Instr_Regs_value_a3[9] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16328 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [13] -> \FETCH_Instr_Regs_value_a3[9] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16329 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [14] -> \FETCH_Instr_Regs_value_a3[9] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16330 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [15] -> \FETCH_Instr_Regs_value_a3[9] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16331 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [16] -> \FETCH_Instr_Regs_value_a3[9] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16332 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [17] -> \FETCH_Instr_Regs_value_a3[9] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16333 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [18] -> \FETCH_Instr_Regs_value_a3[9] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16334 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [19] -> \FETCH_Instr_Regs_value_a3[9] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16335 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [20] -> \FETCH_Instr_Regs_value_a3[9] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16336 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [21] -> \FETCH_Instr_Regs_value_a3[9] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16337 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [22] -> \FETCH_Instr_Regs_value_a3[9] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16338 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [23] -> \FETCH_Instr_Regs_value_a3[9] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16339 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [24] -> \FETCH_Instr_Regs_value_a3[9] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16340 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [25] -> \FETCH_Instr_Regs_value_a3[9] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16341 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [26] -> \FETCH_Instr_Regs_value_a3[9] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16342 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [27] -> \FETCH_Instr_Regs_value_a3[9] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16343 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [28] -> \FETCH_Instr_Regs_value_a3[9] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16344 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [29] -> \FETCH_Instr_Regs_value_a3[9] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16345 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [30] -> \FETCH_Instr_Regs_value_a3[9] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16346 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[9][0][0]$y$2674 [31] -> \FETCH_Instr_Regs_value_a3[9] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16475 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [0] -> \FETCH_Instr_Regs_value_a3[8] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16476 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [1] -> \FETCH_Instr_Regs_value_a3[8] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16477 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [2] -> \FETCH_Instr_Regs_value_a3[8] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16478 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [3] -> \FETCH_Instr_Regs_value_a3[8] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16479 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [4] -> \FETCH_Instr_Regs_value_a3[8] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16480 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [5] -> \FETCH_Instr_Regs_value_a3[8] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16481 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [6] -> \FETCH_Instr_Regs_value_a3[8] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16482 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [7] -> \FETCH_Instr_Regs_value_a3[8] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16483 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [8] -> \FETCH_Instr_Regs_value_a3[8] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16484 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [9] -> \FETCH_Instr_Regs_value_a3[8] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16485 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [10] -> \FETCH_Instr_Regs_value_a3[8] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16486 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [11] -> \FETCH_Instr_Regs_value_a3[8] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16487 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [12] -> \FETCH_Instr_Regs_value_a3[8] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16488 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [13] -> \FETCH_Instr_Regs_value_a3[8] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16489 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [14] -> \FETCH_Instr_Regs_value_a3[8] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16490 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [15] -> \FETCH_Instr_Regs_value_a3[8] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16491 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [16] -> \FETCH_Instr_Regs_value_a3[8] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16492 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [17] -> \FETCH_Instr_Regs_value_a3[8] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16493 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [18] -> \FETCH_Instr_Regs_value_a3[8] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16494 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [19] -> \FETCH_Instr_Regs_value_a3[8] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16495 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [20] -> \FETCH_Instr_Regs_value_a3[8] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16496 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [21] -> \FETCH_Instr_Regs_value_a3[8] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16497 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [22] -> \FETCH_Instr_Regs_value_a3[8] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16498 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [23] -> \FETCH_Instr_Regs_value_a3[8] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16499 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [24] -> \FETCH_Instr_Regs_value_a3[8] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16500 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [25] -> \FETCH_Instr_Regs_value_a3[8] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16501 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [26] -> \FETCH_Instr_Regs_value_a3[8] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16502 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [27] -> \FETCH_Instr_Regs_value_a3[8] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16503 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [28] -> \FETCH_Instr_Regs_value_a3[8] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16504 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [29] -> \FETCH_Instr_Regs_value_a3[8] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16505 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [30] -> \FETCH_Instr_Regs_value_a3[8] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$16506 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[8][0][0]$y$2650 [31] -> \FETCH_Instr_Regs_value_a3[8] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17117 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [0] -> \FETCH_Instr_Regs_value_a3[6] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17118 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [1] -> \FETCH_Instr_Regs_value_a3[6] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17119 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [2] -> \FETCH_Instr_Regs_value_a3[6] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17120 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [3] -> \FETCH_Instr_Regs_value_a3[6] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17121 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [4] -> \FETCH_Instr_Regs_value_a3[6] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17122 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [5] -> \FETCH_Instr_Regs_value_a3[6] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17123 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [6] -> \FETCH_Instr_Regs_value_a3[6] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17124 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [7] -> \FETCH_Instr_Regs_value_a3[6] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17125 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [8] -> \FETCH_Instr_Regs_value_a3[6] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17126 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [9] -> \FETCH_Instr_Regs_value_a3[6] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17127 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [10] -> \FETCH_Instr_Regs_value_a3[6] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17128 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [11] -> \FETCH_Instr_Regs_value_a3[6] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17129 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [12] -> \FETCH_Instr_Regs_value_a3[6] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17130 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [13] -> \FETCH_Instr_Regs_value_a3[6] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17131 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [14] -> \FETCH_Instr_Regs_value_a3[6] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17132 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [15] -> \FETCH_Instr_Regs_value_a3[6] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17133 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [16] -> \FETCH_Instr_Regs_value_a3[6] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17134 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [17] -> \FETCH_Instr_Regs_value_a3[6] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17135 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [18] -> \FETCH_Instr_Regs_value_a3[6] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17136 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [19] -> \FETCH_Instr_Regs_value_a3[6] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17137 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [20] -> \FETCH_Instr_Regs_value_a3[6] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17138 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [21] -> \FETCH_Instr_Regs_value_a3[6] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17139 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [22] -> \FETCH_Instr_Regs_value_a3[6] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17140 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [23] -> \FETCH_Instr_Regs_value_a3[6] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17141 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [24] -> \FETCH_Instr_Regs_value_a3[6] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17142 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [25] -> \FETCH_Instr_Regs_value_a3[6] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17143 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [26] -> \FETCH_Instr_Regs_value_a3[6] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17144 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [27] -> \FETCH_Instr_Regs_value_a3[6] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17145 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [28] -> \FETCH_Instr_Regs_value_a3[6] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17146 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [29] -> \FETCH_Instr_Regs_value_a3[6] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17147 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [30] -> \FETCH_Instr_Regs_value_a3[6] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$17148 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[6][0][0]$y$2602 [31] -> \FETCH_Instr_Regs_value_a3[6] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18046 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [0] -> \FETCH_Instr_Regs_value_a3[2] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18047 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [1] -> \FETCH_Instr_Regs_value_a3[2] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18048 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [2] -> \FETCH_Instr_Regs_value_a3[2] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18049 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [3] -> \FETCH_Instr_Regs_value_a3[2] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18050 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [4] -> \FETCH_Instr_Regs_value_a3[2] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18051 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [5] -> \FETCH_Instr_Regs_value_a3[2] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18052 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [6] -> \FETCH_Instr_Regs_value_a3[2] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18053 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [7] -> \FETCH_Instr_Regs_value_a3[2] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18054 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [8] -> \FETCH_Instr_Regs_value_a3[2] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18055 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [9] -> \FETCH_Instr_Regs_value_a3[2] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18056 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [10] -> \FETCH_Instr_Regs_value_a3[2] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18057 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [11] -> \FETCH_Instr_Regs_value_a3[2] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18058 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [12] -> \FETCH_Instr_Regs_value_a3[2] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18059 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [13] -> \FETCH_Instr_Regs_value_a3[2] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18060 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [14] -> \FETCH_Instr_Regs_value_a3[2] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18061 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [15] -> \FETCH_Instr_Regs_value_a3[2] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18062 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [16] -> \FETCH_Instr_Regs_value_a3[2] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18063 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [17] -> \FETCH_Instr_Regs_value_a3[2] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18064 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [18] -> \FETCH_Instr_Regs_value_a3[2] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18065 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [19] -> \FETCH_Instr_Regs_value_a3[2] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18066 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [20] -> \FETCH_Instr_Regs_value_a3[2] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18067 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [21] -> \FETCH_Instr_Regs_value_a3[2] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18068 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [22] -> \FETCH_Instr_Regs_value_a3[2] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18069 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [23] -> \FETCH_Instr_Regs_value_a3[2] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18070 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [24] -> \FETCH_Instr_Regs_value_a3[2] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18071 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [25] -> \FETCH_Instr_Regs_value_a3[2] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18072 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [26] -> \FETCH_Instr_Regs_value_a3[2] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18073 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [27] -> \FETCH_Instr_Regs_value_a3[2] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18074 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [28] -> \FETCH_Instr_Regs_value_a3[2] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18075 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [29] -> \FETCH_Instr_Regs_value_a3[2] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18076 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [30] -> \FETCH_Instr_Regs_value_a3[2] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18077 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[2][0][0]$y$2506 [31] -> \FETCH_Instr_Regs_value_a3[2] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18565 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [0] -> \FETCH_Instr_Regs_value_a3[26] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18566 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [1] -> \FETCH_Instr_Regs_value_a3[26] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18567 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [2] -> \FETCH_Instr_Regs_value_a3[26] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18568 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [3] -> \FETCH_Instr_Regs_value_a3[26] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18569 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [4] -> \FETCH_Instr_Regs_value_a3[26] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18570 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [5] -> \FETCH_Instr_Regs_value_a3[26] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18571 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [6] -> \FETCH_Instr_Regs_value_a3[26] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18572 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [7] -> \FETCH_Instr_Regs_value_a3[26] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18573 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [8] -> \FETCH_Instr_Regs_value_a3[26] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18574 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [9] -> \FETCH_Instr_Regs_value_a3[26] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18575 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [10] -> \FETCH_Instr_Regs_value_a3[26] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18576 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [11] -> \FETCH_Instr_Regs_value_a3[26] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18577 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [12] -> \FETCH_Instr_Regs_value_a3[26] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18578 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [13] -> \FETCH_Instr_Regs_value_a3[26] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18579 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [14] -> \FETCH_Instr_Regs_value_a3[26] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18580 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [15] -> \FETCH_Instr_Regs_value_a3[26] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18581 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [16] -> \FETCH_Instr_Regs_value_a3[26] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18582 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [17] -> \FETCH_Instr_Regs_value_a3[26] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18583 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [18] -> \FETCH_Instr_Regs_value_a3[26] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18584 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [19] -> \FETCH_Instr_Regs_value_a3[26] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18585 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [20] -> \FETCH_Instr_Regs_value_a3[26] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18586 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [21] -> \FETCH_Instr_Regs_value_a3[26] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18587 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [22] -> \FETCH_Instr_Regs_value_a3[26] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18588 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [23] -> \FETCH_Instr_Regs_value_a3[26] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18589 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [24] -> \FETCH_Instr_Regs_value_a3[26] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18590 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [25] -> \FETCH_Instr_Regs_value_a3[26] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18591 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [26] -> \FETCH_Instr_Regs_value_a3[26] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18592 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [27] -> \FETCH_Instr_Regs_value_a3[26] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18593 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [28] -> \FETCH_Instr_Regs_value_a3[26] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18594 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [29] -> \FETCH_Instr_Regs_value_a3[26] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18595 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [30] -> \FETCH_Instr_Regs_value_a3[26] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18596 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[26][0][0]$y$3082 [31] -> \FETCH_Instr_Regs_value_a3[26] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18735 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [0] -> \FETCH_Instr_Regs_value_a3[18] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18736 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [1] -> \FETCH_Instr_Regs_value_a3[18] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18737 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [2] -> \FETCH_Instr_Regs_value_a3[18] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18738 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [3] -> \FETCH_Instr_Regs_value_a3[18] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18739 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [4] -> \FETCH_Instr_Regs_value_a3[18] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18740 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [5] -> \FETCH_Instr_Regs_value_a3[18] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18741 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [6] -> \FETCH_Instr_Regs_value_a3[18] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18742 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [7] -> \FETCH_Instr_Regs_value_a3[18] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18743 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [8] -> \FETCH_Instr_Regs_value_a3[18] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18744 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [9] -> \FETCH_Instr_Regs_value_a3[18] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18745 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [10] -> \FETCH_Instr_Regs_value_a3[18] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18746 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [11] -> \FETCH_Instr_Regs_value_a3[18] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18747 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [12] -> \FETCH_Instr_Regs_value_a3[18] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18748 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [13] -> \FETCH_Instr_Regs_value_a3[18] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18749 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [14] -> \FETCH_Instr_Regs_value_a3[18] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18750 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [15] -> \FETCH_Instr_Regs_value_a3[18] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18751 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [16] -> \FETCH_Instr_Regs_value_a3[18] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18752 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [17] -> \FETCH_Instr_Regs_value_a3[18] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18753 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [18] -> \FETCH_Instr_Regs_value_a3[18] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18754 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [19] -> \FETCH_Instr_Regs_value_a3[18] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18755 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [20] -> \FETCH_Instr_Regs_value_a3[18] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18756 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [21] -> \FETCH_Instr_Regs_value_a3[18] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18757 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [22] -> \FETCH_Instr_Regs_value_a3[18] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18758 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [23] -> \FETCH_Instr_Regs_value_a3[18] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18759 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [24] -> \FETCH_Instr_Regs_value_a3[18] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18760 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [25] -> \FETCH_Instr_Regs_value_a3[18] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18761 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [26] -> \FETCH_Instr_Regs_value_a3[18] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18762 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [27] -> \FETCH_Instr_Regs_value_a3[18] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18763 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [28] -> \FETCH_Instr_Regs_value_a3[18] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18764 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [29] -> \FETCH_Instr_Regs_value_a3[18] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18765 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [30] -> \FETCH_Instr_Regs_value_a3[18] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18766 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[18][0][0]$y$2890 [31] -> \FETCH_Instr_Regs_value_a3[18] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18993 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [0] -> \FETCH_Instr_Regs_value_a3[25] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18994 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [1] -> \FETCH_Instr_Regs_value_a3[25] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18995 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [2] -> \FETCH_Instr_Regs_value_a3[25] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18996 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [3] -> \FETCH_Instr_Regs_value_a3[25] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18997 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [4] -> \FETCH_Instr_Regs_value_a3[25] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18998 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [5] -> \FETCH_Instr_Regs_value_a3[25] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$18999 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [6] -> \FETCH_Instr_Regs_value_a3[25] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19000 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [7] -> \FETCH_Instr_Regs_value_a3[25] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19001 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [8] -> \FETCH_Instr_Regs_value_a3[25] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19002 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [9] -> \FETCH_Instr_Regs_value_a3[25] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19003 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [10] -> \FETCH_Instr_Regs_value_a3[25] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19004 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [11] -> \FETCH_Instr_Regs_value_a3[25] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19005 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [12] -> \FETCH_Instr_Regs_value_a3[25] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19006 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [13] -> \FETCH_Instr_Regs_value_a3[25] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19007 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [14] -> \FETCH_Instr_Regs_value_a3[25] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19008 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [15] -> \FETCH_Instr_Regs_value_a3[25] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19009 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [16] -> \FETCH_Instr_Regs_value_a3[25] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19010 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [17] -> \FETCH_Instr_Regs_value_a3[25] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19011 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [18] -> \FETCH_Instr_Regs_value_a3[25] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19012 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [19] -> \FETCH_Instr_Regs_value_a3[25] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19013 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [20] -> \FETCH_Instr_Regs_value_a3[25] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19014 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [21] -> \FETCH_Instr_Regs_value_a3[25] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19015 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [22] -> \FETCH_Instr_Regs_value_a3[25] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19016 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [23] -> \FETCH_Instr_Regs_value_a3[25] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19017 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [24] -> \FETCH_Instr_Regs_value_a3[25] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19018 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [25] -> \FETCH_Instr_Regs_value_a3[25] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19019 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [26] -> \FETCH_Instr_Regs_value_a3[25] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19020 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [27] -> \FETCH_Instr_Regs_value_a3[25] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19021 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [28] -> \FETCH_Instr_Regs_value_a3[25] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19022 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [29] -> \FETCH_Instr_Regs_value_a3[25] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19023 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [30] -> \FETCH_Instr_Regs_value_a3[25] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19024 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[25][0][0]$y$3058 [31] -> \FETCH_Instr_Regs_value_a3[25] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19217 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [0] -> \FETCH_Instr_Regs_value_a3[24] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19218 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [1] -> \FETCH_Instr_Regs_value_a3[24] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19219 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [2] -> \FETCH_Instr_Regs_value_a3[24] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19220 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [3] -> \FETCH_Instr_Regs_value_a3[24] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19221 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [4] -> \FETCH_Instr_Regs_value_a3[24] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19222 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [5] -> \FETCH_Instr_Regs_value_a3[24] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19223 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [6] -> \FETCH_Instr_Regs_value_a3[24] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19224 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [7] -> \FETCH_Instr_Regs_value_a3[24] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19225 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [8] -> \FETCH_Instr_Regs_value_a3[24] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19226 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [9] -> \FETCH_Instr_Regs_value_a3[24] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19227 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [10] -> \FETCH_Instr_Regs_value_a3[24] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19228 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [11] -> \FETCH_Instr_Regs_value_a3[24] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19229 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [12] -> \FETCH_Instr_Regs_value_a3[24] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19230 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [13] -> \FETCH_Instr_Regs_value_a3[24] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19231 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [14] -> \FETCH_Instr_Regs_value_a3[24] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19232 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [15] -> \FETCH_Instr_Regs_value_a3[24] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19233 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [16] -> \FETCH_Instr_Regs_value_a3[24] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19234 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [17] -> \FETCH_Instr_Regs_value_a3[24] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19235 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [18] -> \FETCH_Instr_Regs_value_a3[24] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19236 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [19] -> \FETCH_Instr_Regs_value_a3[24] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19237 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [20] -> \FETCH_Instr_Regs_value_a3[24] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19238 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [21] -> \FETCH_Instr_Regs_value_a3[24] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19239 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [22] -> \FETCH_Instr_Regs_value_a3[24] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19240 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [23] -> \FETCH_Instr_Regs_value_a3[24] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19241 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [24] -> \FETCH_Instr_Regs_value_a3[24] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19242 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [25] -> \FETCH_Instr_Regs_value_a3[24] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19243 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [26] -> \FETCH_Instr_Regs_value_a3[24] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19244 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [27] -> \FETCH_Instr_Regs_value_a3[24] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19245 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [28] -> \FETCH_Instr_Regs_value_a3[24] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19246 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [29] -> \FETCH_Instr_Regs_value_a3[24] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19247 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [30] -> \FETCH_Instr_Regs_value_a3[24] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19248 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[24][0][0]$y$3034 [31] -> \FETCH_Instr_Regs_value_a3[24] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19271 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [0] -> \FETCH_Instr_Regs_value_a3[22] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19272 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [1] -> \FETCH_Instr_Regs_value_a3[22] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19273 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [2] -> \FETCH_Instr_Regs_value_a3[22] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19274 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [3] -> \FETCH_Instr_Regs_value_a3[22] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19275 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [4] -> \FETCH_Instr_Regs_value_a3[22] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19276 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [5] -> \FETCH_Instr_Regs_value_a3[22] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19277 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [6] -> \FETCH_Instr_Regs_value_a3[22] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19278 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [7] -> \FETCH_Instr_Regs_value_a3[22] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19279 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [8] -> \FETCH_Instr_Regs_value_a3[22] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19280 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [9] -> \FETCH_Instr_Regs_value_a3[22] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19281 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [10] -> \FETCH_Instr_Regs_value_a3[22] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19282 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [11] -> \FETCH_Instr_Regs_value_a3[22] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19283 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [12] -> \FETCH_Instr_Regs_value_a3[22] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19284 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [13] -> \FETCH_Instr_Regs_value_a3[22] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19285 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [14] -> \FETCH_Instr_Regs_value_a3[22] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19286 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [15] -> \FETCH_Instr_Regs_value_a3[22] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19287 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [16] -> \FETCH_Instr_Regs_value_a3[22] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19288 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [17] -> \FETCH_Instr_Regs_value_a3[22] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19289 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [18] -> \FETCH_Instr_Regs_value_a3[22] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19290 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [19] -> \FETCH_Instr_Regs_value_a3[22] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19291 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [20] -> \FETCH_Instr_Regs_value_a3[22] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19292 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [21] -> \FETCH_Instr_Regs_value_a3[22] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19293 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [22] -> \FETCH_Instr_Regs_value_a3[22] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19294 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [23] -> \FETCH_Instr_Regs_value_a3[22] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19295 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [24] -> \FETCH_Instr_Regs_value_a3[22] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19296 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [25] -> \FETCH_Instr_Regs_value_a3[22] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19297 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [26] -> \FETCH_Instr_Regs_value_a3[22] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19298 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [27] -> \FETCH_Instr_Regs_value_a3[22] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19299 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [28] -> \FETCH_Instr_Regs_value_a3[22] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19300 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [29] -> \FETCH_Instr_Regs_value_a3[22] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19301 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [30] -> \FETCH_Instr_Regs_value_a3[22] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19302 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[22][0][0]$y$2986 [31] -> \FETCH_Instr_Regs_value_a3[22] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19430 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [0] -> \FETCH_Instr_Regs_value_a3[21] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19431 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [1] -> \FETCH_Instr_Regs_value_a3[21] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19432 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [2] -> \FETCH_Instr_Regs_value_a3[21] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19433 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [3] -> \FETCH_Instr_Regs_value_a3[21] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19434 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [4] -> \FETCH_Instr_Regs_value_a3[21] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19435 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [5] -> \FETCH_Instr_Regs_value_a3[21] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19436 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [6] -> \FETCH_Instr_Regs_value_a3[21] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19437 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [7] -> \FETCH_Instr_Regs_value_a3[21] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19438 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [8] -> \FETCH_Instr_Regs_value_a3[21] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19439 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [9] -> \FETCH_Instr_Regs_value_a3[21] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19440 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [10] -> \FETCH_Instr_Regs_value_a3[21] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19441 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [11] -> \FETCH_Instr_Regs_value_a3[21] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19442 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [12] -> \FETCH_Instr_Regs_value_a3[21] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19443 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [13] -> \FETCH_Instr_Regs_value_a3[21] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19444 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [14] -> \FETCH_Instr_Regs_value_a3[21] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19445 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [15] -> \FETCH_Instr_Regs_value_a3[21] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19446 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [16] -> \FETCH_Instr_Regs_value_a3[21] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19447 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [17] -> \FETCH_Instr_Regs_value_a3[21] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19448 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [18] -> \FETCH_Instr_Regs_value_a3[21] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19449 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [19] -> \FETCH_Instr_Regs_value_a3[21] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19450 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [20] -> \FETCH_Instr_Regs_value_a3[21] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19451 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [21] -> \FETCH_Instr_Regs_value_a3[21] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19452 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [22] -> \FETCH_Instr_Regs_value_a3[21] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19453 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [23] -> \FETCH_Instr_Regs_value_a3[21] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19454 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [24] -> \FETCH_Instr_Regs_value_a3[21] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19455 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [25] -> \FETCH_Instr_Regs_value_a3[21] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19456 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [26] -> \FETCH_Instr_Regs_value_a3[21] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19457 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [27] -> \FETCH_Instr_Regs_value_a3[21] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19458 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [28] -> \FETCH_Instr_Regs_value_a3[21] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19459 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [29] -> \FETCH_Instr_Regs_value_a3[21] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19460 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [30] -> \FETCH_Instr_Regs_value_a3[21] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19461 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[21][0][0]$y$2962 [31] -> \FETCH_Instr_Regs_value_a3[21] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19589 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [0] -> \FETCH_Instr_Regs_value_a3[20] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19590 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [1] -> \FETCH_Instr_Regs_value_a3[20] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19591 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [2] -> \FETCH_Instr_Regs_value_a3[20] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19592 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [3] -> \FETCH_Instr_Regs_value_a3[20] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19593 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [4] -> \FETCH_Instr_Regs_value_a3[20] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19594 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [5] -> \FETCH_Instr_Regs_value_a3[20] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19595 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [6] -> \FETCH_Instr_Regs_value_a3[20] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19596 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [7] -> \FETCH_Instr_Regs_value_a3[20] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19597 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [8] -> \FETCH_Instr_Regs_value_a3[20] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19598 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [9] -> \FETCH_Instr_Regs_value_a3[20] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19599 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [10] -> \FETCH_Instr_Regs_value_a3[20] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19600 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [11] -> \FETCH_Instr_Regs_value_a3[20] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19601 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [12] -> \FETCH_Instr_Regs_value_a3[20] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19602 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [13] -> \FETCH_Instr_Regs_value_a3[20] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19603 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [14] -> \FETCH_Instr_Regs_value_a3[20] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19604 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [15] -> \FETCH_Instr_Regs_value_a3[20] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19605 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [16] -> \FETCH_Instr_Regs_value_a3[20] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19606 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [17] -> \FETCH_Instr_Regs_value_a3[20] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19607 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [18] -> \FETCH_Instr_Regs_value_a3[20] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19608 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [19] -> \FETCH_Instr_Regs_value_a3[20] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19609 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [20] -> \FETCH_Instr_Regs_value_a3[20] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19610 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [21] -> \FETCH_Instr_Regs_value_a3[20] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19611 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [22] -> \FETCH_Instr_Regs_value_a3[20] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19612 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [23] -> \FETCH_Instr_Regs_value_a3[20] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19613 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [24] -> \FETCH_Instr_Regs_value_a3[20] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19614 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [25] -> \FETCH_Instr_Regs_value_a3[20] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19615 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [26] -> \FETCH_Instr_Regs_value_a3[20] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19616 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [27] -> \FETCH_Instr_Regs_value_a3[20] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19617 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [28] -> \FETCH_Instr_Regs_value_a3[20] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19618 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [29] -> \FETCH_Instr_Regs_value_a3[20] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19619 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [30] -> \FETCH_Instr_Regs_value_a3[20] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19620 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[20][0][0]$y$2938 [31] -> \FETCH_Instr_Regs_value_a3[20] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19790 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [0] -> \FETCH_Instr_Regs_value_a3[12] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19791 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [1] -> \FETCH_Instr_Regs_value_a3[12] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19792 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [2] -> \FETCH_Instr_Regs_value_a3[12] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19793 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [3] -> \FETCH_Instr_Regs_value_a3[12] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19794 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [4] -> \FETCH_Instr_Regs_value_a3[12] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19795 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [5] -> \FETCH_Instr_Regs_value_a3[12] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19796 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [6] -> \FETCH_Instr_Regs_value_a3[12] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19797 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [7] -> \FETCH_Instr_Regs_value_a3[12] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19798 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [8] -> \FETCH_Instr_Regs_value_a3[12] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19799 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [9] -> \FETCH_Instr_Regs_value_a3[12] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19800 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [10] -> \FETCH_Instr_Regs_value_a3[12] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19801 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [11] -> \FETCH_Instr_Regs_value_a3[12] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19802 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [12] -> \FETCH_Instr_Regs_value_a3[12] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19803 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [13] -> \FETCH_Instr_Regs_value_a3[12] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19804 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [14] -> \FETCH_Instr_Regs_value_a3[12] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19805 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [15] -> \FETCH_Instr_Regs_value_a3[12] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19806 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [16] -> \FETCH_Instr_Regs_value_a3[12] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19807 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [17] -> \FETCH_Instr_Regs_value_a3[12] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19808 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [18] -> \FETCH_Instr_Regs_value_a3[12] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19809 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [19] -> \FETCH_Instr_Regs_value_a3[12] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19810 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [20] -> \FETCH_Instr_Regs_value_a3[12] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19811 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [21] -> \FETCH_Instr_Regs_value_a3[12] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19812 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [22] -> \FETCH_Instr_Regs_value_a3[12] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19813 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [23] -> \FETCH_Instr_Regs_value_a3[12] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19814 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [24] -> \FETCH_Instr_Regs_value_a3[12] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19815 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [25] -> \FETCH_Instr_Regs_value_a3[12] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19816 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [26] -> \FETCH_Instr_Regs_value_a3[12] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19817 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [27] -> \FETCH_Instr_Regs_value_a3[12] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19818 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [28] -> \FETCH_Instr_Regs_value_a3[12] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19819 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [29] -> \FETCH_Instr_Regs_value_a3[12] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19820 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [30] -> \FETCH_Instr_Regs_value_a3[12] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$19821 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[12][0][0]$y$2746 [31] -> \FETCH_Instr_Regs_value_a3[12] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21790 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [0] -> \FETCH_Instr_Regs_value_a3[1] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21791 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [1] -> \FETCH_Instr_Regs_value_a3[1] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21792 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [2] -> \FETCH_Instr_Regs_value_a3[1] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21793 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [3] -> \FETCH_Instr_Regs_value_a3[1] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21794 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [4] -> \FETCH_Instr_Regs_value_a3[1] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21795 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [5] -> \FETCH_Instr_Regs_value_a3[1] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21796 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [6] -> \FETCH_Instr_Regs_value_a3[1] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21797 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [7] -> \FETCH_Instr_Regs_value_a3[1] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21798 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [8] -> \FETCH_Instr_Regs_value_a3[1] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21799 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [9] -> \FETCH_Instr_Regs_value_a3[1] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21800 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [10] -> \FETCH_Instr_Regs_value_a3[1] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21801 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [11] -> \FETCH_Instr_Regs_value_a3[1] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21802 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [12] -> \FETCH_Instr_Regs_value_a3[1] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21803 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [13] -> \FETCH_Instr_Regs_value_a3[1] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21804 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [14] -> \FETCH_Instr_Regs_value_a3[1] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21805 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [15] -> \FETCH_Instr_Regs_value_a3[1] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21806 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [16] -> \FETCH_Instr_Regs_value_a3[1] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21807 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [17] -> \FETCH_Instr_Regs_value_a3[1] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21808 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [18] -> \FETCH_Instr_Regs_value_a3[1] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21809 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [19] -> \FETCH_Instr_Regs_value_a3[1] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21810 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [20] -> \FETCH_Instr_Regs_value_a3[1] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21811 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [21] -> \FETCH_Instr_Regs_value_a3[1] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21812 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [22] -> \FETCH_Instr_Regs_value_a3[1] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21813 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [23] -> \FETCH_Instr_Regs_value_a3[1] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21814 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [24] -> \FETCH_Instr_Regs_value_a3[1] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21815 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [25] -> \FETCH_Instr_Regs_value_a3[1] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21816 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [26] -> \FETCH_Instr_Regs_value_a3[1] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21817 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [27] -> \FETCH_Instr_Regs_value_a3[1] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21818 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [28] -> \FETCH_Instr_Regs_value_a3[1] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21819 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [29] -> \FETCH_Instr_Regs_value_a3[1] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21820 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [30] -> \FETCH_Instr_Regs_value_a3[1] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21821 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[1][0][0]$y$2482 [31] -> \FETCH_Instr_Regs_value_a3[1] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21891 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [0] -> \FETCH_Instr_Regs_value_a3[14] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21892 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [1] -> \FETCH_Instr_Regs_value_a3[14] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21893 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [2] -> \FETCH_Instr_Regs_value_a3[14] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21894 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [3] -> \FETCH_Instr_Regs_value_a3[14] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21895 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [4] -> \FETCH_Instr_Regs_value_a3[14] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21896 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [5] -> \FETCH_Instr_Regs_value_a3[14] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21897 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [6] -> \FETCH_Instr_Regs_value_a3[14] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21898 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [7] -> \FETCH_Instr_Regs_value_a3[14] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21899 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [8] -> \FETCH_Instr_Regs_value_a3[14] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21900 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [9] -> \FETCH_Instr_Regs_value_a3[14] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21901 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [10] -> \FETCH_Instr_Regs_value_a3[14] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21902 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [11] -> \FETCH_Instr_Regs_value_a3[14] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21903 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [12] -> \FETCH_Instr_Regs_value_a3[14] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21904 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [13] -> \FETCH_Instr_Regs_value_a3[14] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21905 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [14] -> \FETCH_Instr_Regs_value_a3[14] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21906 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [15] -> \FETCH_Instr_Regs_value_a3[14] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21907 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [16] -> \FETCH_Instr_Regs_value_a3[14] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21908 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [17] -> \FETCH_Instr_Regs_value_a3[14] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21909 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [18] -> \FETCH_Instr_Regs_value_a3[14] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21910 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [19] -> \FETCH_Instr_Regs_value_a3[14] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21911 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [20] -> \FETCH_Instr_Regs_value_a3[14] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21912 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [21] -> \FETCH_Instr_Regs_value_a3[14] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21913 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [22] -> \FETCH_Instr_Regs_value_a3[14] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21914 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [23] -> \FETCH_Instr_Regs_value_a3[14] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21915 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [24] -> \FETCH_Instr_Regs_value_a3[14] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21916 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [25] -> \FETCH_Instr_Regs_value_a3[14] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21917 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [26] -> \FETCH_Instr_Regs_value_a3[14] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21918 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [27] -> \FETCH_Instr_Regs_value_a3[14] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21919 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [28] -> \FETCH_Instr_Regs_value_a3[14] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21920 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [29] -> \FETCH_Instr_Regs_value_a3[14] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21921 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [30] -> \FETCH_Instr_Regs_value_a3[14] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$21922 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[14][0][0]$y$2794 [31] -> \FETCH_Instr_Regs_value_a3[14] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22930 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [0] -> \FETCH_Instr_Pc_a0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22931 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [1] -> \FETCH_Instr_Pc_a0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22932 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [2] -> \FETCH_Instr_Pc_a0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22933 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [3] -> \FETCH_Instr_Pc_a0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22934 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [4] -> \FETCH_Instr_Pc_a0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22935 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [5] -> \FETCH_Instr_Pc_a0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22936 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [6] -> \FETCH_Instr_Pc_a0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22937 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [7] -> \FETCH_Instr_Pc_a0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22938 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [8] -> \FETCH_Instr_Pc_a0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22939 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [9] -> \FETCH_Instr_Pc_a0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22940 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [10] -> \FETCH_Instr_Pc_a0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22941 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [11] -> \FETCH_Instr_Pc_a0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22942 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [12] -> \FETCH_Instr_Pc_a0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22943 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [13] -> \FETCH_Instr_Pc_a0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22944 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [14] -> \FETCH_Instr_Pc_a0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22945 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [15] -> \FETCH_Instr_Pc_a0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22946 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [16] -> \FETCH_Instr_Pc_a0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22947 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [17] -> \FETCH_Instr_Pc_a0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22948 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [18] -> \FETCH_Instr_Pc_a0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22949 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [19] -> \FETCH_Instr_Pc_a0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22950 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [20] -> \FETCH_Instr_Pc_a0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22951 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [21] -> \FETCH_Instr_Pc_a0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22952 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [22] -> \FETCH_Instr_Pc_a0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22953 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [23] -> \FETCH_Instr_Pc_a0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22954 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [24] -> \FETCH_Instr_Pc_a0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22955 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [25] -> \FETCH_Instr_Pc_a0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22956 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [26] -> \FETCH_Instr_Pc_a0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22957 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [27] -> \FETCH_Instr_Pc_a0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22958 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [28] -> \FETCH_Instr_Pc_a0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22959 to $_DFFE_PP_ for \FETCH_Instr_Pc_n1 [29] -> \FETCH_Instr_Pc_a0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22979 to $_DFFE_PP_ for \FETCH_Instr_BranchState_a1 [0] -> \FETCH_Instr_BranchState_a2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$22980 to $_DFFE_PP_ for \FETCH_Instr_BranchState_a1 [1] -> \FETCH_Instr_BranchState_a2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3728 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [0] -> \FETCH_Instr_Regs_value_a3[7] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3729 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [1] -> \FETCH_Instr_Regs_value_a3[7] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3730 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [2] -> \FETCH_Instr_Regs_value_a3[7] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3731 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [3] -> \FETCH_Instr_Regs_value_a3[7] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3732 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [4] -> \FETCH_Instr_Regs_value_a3[7] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3733 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [5] -> \FETCH_Instr_Regs_value_a3[7] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3734 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [6] -> \FETCH_Instr_Regs_value_a3[7] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3735 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [7] -> \FETCH_Instr_Regs_value_a3[7] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3736 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [8] -> \FETCH_Instr_Regs_value_a3[7] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3737 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [9] -> \FETCH_Instr_Regs_value_a3[7] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3738 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [10] -> \FETCH_Instr_Regs_value_a3[7] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3739 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [11] -> \FETCH_Instr_Regs_value_a3[7] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3740 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [12] -> \FETCH_Instr_Regs_value_a3[7] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3741 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [13] -> \FETCH_Instr_Regs_value_a3[7] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3742 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [14] -> \FETCH_Instr_Regs_value_a3[7] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3743 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [15] -> \FETCH_Instr_Regs_value_a3[7] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3744 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [16] -> \FETCH_Instr_Regs_value_a3[7] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3745 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [17] -> \FETCH_Instr_Regs_value_a3[7] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3746 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [18] -> \FETCH_Instr_Regs_value_a3[7] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3747 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [19] -> \FETCH_Instr_Regs_value_a3[7] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3748 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [20] -> \FETCH_Instr_Regs_value_a3[7] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3749 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [21] -> \FETCH_Instr_Regs_value_a3[7] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3750 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [22] -> \FETCH_Instr_Regs_value_a3[7] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3751 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [23] -> \FETCH_Instr_Regs_value_a3[7] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3752 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [24] -> \FETCH_Instr_Regs_value_a3[7] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3753 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [25] -> \FETCH_Instr_Regs_value_a3[7] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3754 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [26] -> \FETCH_Instr_Regs_value_a3[7] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3755 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [27] -> \FETCH_Instr_Regs_value_a3[7] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3756 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [28] -> \FETCH_Instr_Regs_value_a3[7] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3757 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [29] -> \FETCH_Instr_Regs_value_a3[7] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3758 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [30] -> \FETCH_Instr_Regs_value_a3[7] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3759 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[7][0][0]$y$2626 [31] -> \FETCH_Instr_Regs_value_a3[7] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3776 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [0] -> \FETCH_Instr_Regs_value_a3[19] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3777 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [1] -> \FETCH_Instr_Regs_value_a3[19] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3778 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [2] -> \FETCH_Instr_Regs_value_a3[19] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3779 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [3] -> \FETCH_Instr_Regs_value_a3[19] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3780 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [4] -> \FETCH_Instr_Regs_value_a3[19] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3781 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [5] -> \FETCH_Instr_Regs_value_a3[19] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3782 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [6] -> \FETCH_Instr_Regs_value_a3[19] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3783 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [7] -> \FETCH_Instr_Regs_value_a3[19] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3784 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [8] -> \FETCH_Instr_Regs_value_a3[19] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3785 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [9] -> \FETCH_Instr_Regs_value_a3[19] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3786 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [10] -> \FETCH_Instr_Regs_value_a3[19] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3787 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [11] -> \FETCH_Instr_Regs_value_a3[19] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3788 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [12] -> \FETCH_Instr_Regs_value_a3[19] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3789 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [13] -> \FETCH_Instr_Regs_value_a3[19] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3790 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [14] -> \FETCH_Instr_Regs_value_a3[19] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3791 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [15] -> \FETCH_Instr_Regs_value_a3[19] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3792 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [16] -> \FETCH_Instr_Regs_value_a3[19] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3793 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [17] -> \FETCH_Instr_Regs_value_a3[19] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3794 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [18] -> \FETCH_Instr_Regs_value_a3[19] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3795 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [19] -> \FETCH_Instr_Regs_value_a3[19] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3796 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [20] -> \FETCH_Instr_Regs_value_a3[19] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3797 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [21] -> \FETCH_Instr_Regs_value_a3[19] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3798 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [22] -> \FETCH_Instr_Regs_value_a3[19] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3799 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [23] -> \FETCH_Instr_Regs_value_a3[19] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3800 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [24] -> \FETCH_Instr_Regs_value_a3[19] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3801 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [25] -> \FETCH_Instr_Regs_value_a3[19] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3802 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [26] -> \FETCH_Instr_Regs_value_a3[19] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3803 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [27] -> \FETCH_Instr_Regs_value_a3[19] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3804 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [28] -> \FETCH_Instr_Regs_value_a3[19] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3805 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [29] -> \FETCH_Instr_Regs_value_a3[19] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3806 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [30] -> \FETCH_Instr_Regs_value_a3[19] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3807 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[19][0][0]$y$2914 [31] -> \FETCH_Instr_Regs_value_a3[19] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3817 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [0] -> \FETCH_Instr_Regs_value_a3[17] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3818 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [1] -> \FETCH_Instr_Regs_value_a3[17] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3819 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [2] -> \FETCH_Instr_Regs_value_a3[17] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3820 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [3] -> \FETCH_Instr_Regs_value_a3[17] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3821 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [4] -> \FETCH_Instr_Regs_value_a3[17] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3822 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [5] -> \FETCH_Instr_Regs_value_a3[17] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3823 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [6] -> \FETCH_Instr_Regs_value_a3[17] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3824 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [7] -> \FETCH_Instr_Regs_value_a3[17] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3825 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [8] -> \FETCH_Instr_Regs_value_a3[17] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3826 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [9] -> \FETCH_Instr_Regs_value_a3[17] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3827 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [10] -> \FETCH_Instr_Regs_value_a3[17] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3828 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [11] -> \FETCH_Instr_Regs_value_a3[17] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3829 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [12] -> \FETCH_Instr_Regs_value_a3[17] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3830 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [13] -> \FETCH_Instr_Regs_value_a3[17] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3831 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [14] -> \FETCH_Instr_Regs_value_a3[17] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3832 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [15] -> \FETCH_Instr_Regs_value_a3[17] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3833 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [16] -> \FETCH_Instr_Regs_value_a3[17] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3834 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [17] -> \FETCH_Instr_Regs_value_a3[17] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3835 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [18] -> \FETCH_Instr_Regs_value_a3[17] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3836 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [19] -> \FETCH_Instr_Regs_value_a3[17] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3837 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [20] -> \FETCH_Instr_Regs_value_a3[17] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3838 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [21] -> \FETCH_Instr_Regs_value_a3[17] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3839 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [22] -> \FETCH_Instr_Regs_value_a3[17] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3840 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [23] -> \FETCH_Instr_Regs_value_a3[17] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3841 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [24] -> \FETCH_Instr_Regs_value_a3[17] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3842 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [25] -> \FETCH_Instr_Regs_value_a3[17] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3843 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [26] -> \FETCH_Instr_Regs_value_a3[17] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3844 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [27] -> \FETCH_Instr_Regs_value_a3[17] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3845 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [28] -> \FETCH_Instr_Regs_value_a3[17] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3846 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [29] -> \FETCH_Instr_Regs_value_a3[17] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3847 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [30] -> \FETCH_Instr_Regs_value_a3[17] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3848 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[17][0][0]$y$2866 [31] -> \FETCH_Instr_Regs_value_a3[17] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4159 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [0] -> \FETCH_Instr_Regs_value_a3[16] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4160 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [1] -> \FETCH_Instr_Regs_value_a3[16] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4161 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [2] -> \FETCH_Instr_Regs_value_a3[16] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4162 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [3] -> \FETCH_Instr_Regs_value_a3[16] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4163 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [4] -> \FETCH_Instr_Regs_value_a3[16] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4164 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [5] -> \FETCH_Instr_Regs_value_a3[16] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4165 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [6] -> \FETCH_Instr_Regs_value_a3[16] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4166 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [7] -> \FETCH_Instr_Regs_value_a3[16] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4167 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [8] -> \FETCH_Instr_Regs_value_a3[16] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4168 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [9] -> \FETCH_Instr_Regs_value_a3[16] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4169 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [10] -> \FETCH_Instr_Regs_value_a3[16] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4170 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [11] -> \FETCH_Instr_Regs_value_a3[16] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4171 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [12] -> \FETCH_Instr_Regs_value_a3[16] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4172 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [13] -> \FETCH_Instr_Regs_value_a3[16] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4173 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [14] -> \FETCH_Instr_Regs_value_a3[16] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4174 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [15] -> \FETCH_Instr_Regs_value_a3[16] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4175 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [16] -> \FETCH_Instr_Regs_value_a3[16] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4176 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [17] -> \FETCH_Instr_Regs_value_a3[16] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4177 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [18] -> \FETCH_Instr_Regs_value_a3[16] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4178 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [19] -> \FETCH_Instr_Regs_value_a3[16] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4179 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [20] -> \FETCH_Instr_Regs_value_a3[16] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4180 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [21] -> \FETCH_Instr_Regs_value_a3[16] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4181 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [22] -> \FETCH_Instr_Regs_value_a3[16] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4182 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [23] -> \FETCH_Instr_Regs_value_a3[16] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4183 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [24] -> \FETCH_Instr_Regs_value_a3[16] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4184 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [25] -> \FETCH_Instr_Regs_value_a3[16] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4185 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [26] -> \FETCH_Instr_Regs_value_a3[16] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4186 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [27] -> \FETCH_Instr_Regs_value_a3[16] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4187 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [28] -> \FETCH_Instr_Regs_value_a3[16] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4188 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [29] -> \FETCH_Instr_Regs_value_a3[16] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4189 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [30] -> \FETCH_Instr_Regs_value_a3[16] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4190 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[16][0][0]$y$2842 [31] -> \FETCH_Instr_Regs_value_a3[16] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4223 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [0] -> \FETCH_Instr_Regs_value_a3[15] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4224 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [1] -> \FETCH_Instr_Regs_value_a3[15] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4225 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [2] -> \FETCH_Instr_Regs_value_a3[15] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4226 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [3] -> \FETCH_Instr_Regs_value_a3[15] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4227 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [4] -> \FETCH_Instr_Regs_value_a3[15] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4228 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [5] -> \FETCH_Instr_Regs_value_a3[15] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4229 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [6] -> \FETCH_Instr_Regs_value_a3[15] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4230 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [7] -> \FETCH_Instr_Regs_value_a3[15] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4231 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [8] -> \FETCH_Instr_Regs_value_a3[15] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4232 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [9] -> \FETCH_Instr_Regs_value_a3[15] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4233 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [10] -> \FETCH_Instr_Regs_value_a3[15] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4234 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [11] -> \FETCH_Instr_Regs_value_a3[15] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4235 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [12] -> \FETCH_Instr_Regs_value_a3[15] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4236 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [13] -> \FETCH_Instr_Regs_value_a3[15] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4237 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [14] -> \FETCH_Instr_Regs_value_a3[15] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4238 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [15] -> \FETCH_Instr_Regs_value_a3[15] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4239 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [16] -> \FETCH_Instr_Regs_value_a3[15] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4240 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [17] -> \FETCH_Instr_Regs_value_a3[15] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4241 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [18] -> \FETCH_Instr_Regs_value_a3[15] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4242 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [19] -> \FETCH_Instr_Regs_value_a3[15] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4243 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [20] -> \FETCH_Instr_Regs_value_a3[15] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4244 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [21] -> \FETCH_Instr_Regs_value_a3[15] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4245 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [22] -> \FETCH_Instr_Regs_value_a3[15] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4246 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [23] -> \FETCH_Instr_Regs_value_a3[15] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4247 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [24] -> \FETCH_Instr_Regs_value_a3[15] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4248 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [25] -> \FETCH_Instr_Regs_value_a3[15] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4249 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [26] -> \FETCH_Instr_Regs_value_a3[15] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4250 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [27] -> \FETCH_Instr_Regs_value_a3[15] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4251 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [28] -> \FETCH_Instr_Regs_value_a3[15] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4252 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [29] -> \FETCH_Instr_Regs_value_a3[15] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4253 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [30] -> \FETCH_Instr_Regs_value_a3[15] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4254 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[15][0][0]$y$2818 [31] -> \FETCH_Instr_Regs_value_a3[15] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4550 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [0] -> \FETCH_Instr_Regs_value_a3[27] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4551 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [1] -> \FETCH_Instr_Regs_value_a3[27] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4552 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [2] -> \FETCH_Instr_Regs_value_a3[27] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4553 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [3] -> \FETCH_Instr_Regs_value_a3[27] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4554 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [4] -> \FETCH_Instr_Regs_value_a3[27] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4555 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [5] -> \FETCH_Instr_Regs_value_a3[27] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4556 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [6] -> \FETCH_Instr_Regs_value_a3[27] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4557 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [7] -> \FETCH_Instr_Regs_value_a3[27] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4558 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [8] -> \FETCH_Instr_Regs_value_a3[27] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4559 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [9] -> \FETCH_Instr_Regs_value_a3[27] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4560 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [10] -> \FETCH_Instr_Regs_value_a3[27] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4561 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [11] -> \FETCH_Instr_Regs_value_a3[27] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4562 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [12] -> \FETCH_Instr_Regs_value_a3[27] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4563 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [13] -> \FETCH_Instr_Regs_value_a3[27] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4564 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [14] -> \FETCH_Instr_Regs_value_a3[27] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4565 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [15] -> \FETCH_Instr_Regs_value_a3[27] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4566 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [16] -> \FETCH_Instr_Regs_value_a3[27] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4567 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [17] -> \FETCH_Instr_Regs_value_a3[27] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4568 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [18] -> \FETCH_Instr_Regs_value_a3[27] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4569 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [19] -> \FETCH_Instr_Regs_value_a3[27] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4570 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [20] -> \FETCH_Instr_Regs_value_a3[27] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4571 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [21] -> \FETCH_Instr_Regs_value_a3[27] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4572 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [22] -> \FETCH_Instr_Regs_value_a3[27] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4573 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [23] -> \FETCH_Instr_Regs_value_a3[27] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4574 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [24] -> \FETCH_Instr_Regs_value_a3[27] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4575 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [25] -> \FETCH_Instr_Regs_value_a3[27] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4576 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [26] -> \FETCH_Instr_Regs_value_a3[27] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4577 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [27] -> \FETCH_Instr_Regs_value_a3[27] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4578 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [28] -> \FETCH_Instr_Regs_value_a3[27] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4579 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [29] -> \FETCH_Instr_Regs_value_a3[27] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4580 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [30] -> \FETCH_Instr_Regs_value_a3[27] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4581 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[27][0][0]$y$3106 [31] -> \FETCH_Instr_Regs_value_a3[27] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4614 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [0] -> \FETCH_Instr_Regs_value_a3[30] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4615 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [1] -> \FETCH_Instr_Regs_value_a3[30] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4616 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [2] -> \FETCH_Instr_Regs_value_a3[30] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4617 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [3] -> \FETCH_Instr_Regs_value_a3[30] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4618 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [4] -> \FETCH_Instr_Regs_value_a3[30] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4619 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [5] -> \FETCH_Instr_Regs_value_a3[30] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4620 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [6] -> \FETCH_Instr_Regs_value_a3[30] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4621 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [7] -> \FETCH_Instr_Regs_value_a3[30] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4622 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [8] -> \FETCH_Instr_Regs_value_a3[30] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4623 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [9] -> \FETCH_Instr_Regs_value_a3[30] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4624 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [10] -> \FETCH_Instr_Regs_value_a3[30] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4625 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [11] -> \FETCH_Instr_Regs_value_a3[30] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4626 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [12] -> \FETCH_Instr_Regs_value_a3[30] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4627 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [13] -> \FETCH_Instr_Regs_value_a3[30] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4628 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [14] -> \FETCH_Instr_Regs_value_a3[30] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4629 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [15] -> \FETCH_Instr_Regs_value_a3[30] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4630 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [16] -> \FETCH_Instr_Regs_value_a3[30] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4631 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [17] -> \FETCH_Instr_Regs_value_a3[30] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4632 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [18] -> \FETCH_Instr_Regs_value_a3[30] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4633 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [19] -> \FETCH_Instr_Regs_value_a3[30] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4634 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [20] -> \FETCH_Instr_Regs_value_a3[30] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4635 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [21] -> \FETCH_Instr_Regs_value_a3[30] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4636 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [22] -> \FETCH_Instr_Regs_value_a3[30] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4637 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [23] -> \FETCH_Instr_Regs_value_a3[30] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4638 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [24] -> \FETCH_Instr_Regs_value_a3[30] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4639 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [25] -> \FETCH_Instr_Regs_value_a3[30] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4640 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [26] -> \FETCH_Instr_Regs_value_a3[30] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4641 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [27] -> \FETCH_Instr_Regs_value_a3[30] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4642 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [28] -> \FETCH_Instr_Regs_value_a3[30] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4643 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [29] -> \FETCH_Instr_Regs_value_a3[30] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4644 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [30] -> \FETCH_Instr_Regs_value_a3[30] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4645 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[30][0][0]$y$3178 [31] -> \FETCH_Instr_Regs_value_a3[30] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6364 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [0] -> \FETCH_Instr_Regs_value_a3[13] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6365 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [1] -> \FETCH_Instr_Regs_value_a3[13] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6366 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [2] -> \FETCH_Instr_Regs_value_a3[13] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6367 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [3] -> \FETCH_Instr_Regs_value_a3[13] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6368 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [4] -> \FETCH_Instr_Regs_value_a3[13] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6369 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [5] -> \FETCH_Instr_Regs_value_a3[13] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6370 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [6] -> \FETCH_Instr_Regs_value_a3[13] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6371 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [7] -> \FETCH_Instr_Regs_value_a3[13] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6372 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [8] -> \FETCH_Instr_Regs_value_a3[13] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6373 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [9] -> \FETCH_Instr_Regs_value_a3[13] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6374 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [10] -> \FETCH_Instr_Regs_value_a3[13] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6375 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [11] -> \FETCH_Instr_Regs_value_a3[13] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6376 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [12] -> \FETCH_Instr_Regs_value_a3[13] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6377 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [13] -> \FETCH_Instr_Regs_value_a3[13] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6378 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [14] -> \FETCH_Instr_Regs_value_a3[13] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6379 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [15] -> \FETCH_Instr_Regs_value_a3[13] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6380 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [16] -> \FETCH_Instr_Regs_value_a3[13] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6381 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [17] -> \FETCH_Instr_Regs_value_a3[13] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6382 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [18] -> \FETCH_Instr_Regs_value_a3[13] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6383 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [19] -> \FETCH_Instr_Regs_value_a3[13] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6384 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [20] -> \FETCH_Instr_Regs_value_a3[13] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6385 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [21] -> \FETCH_Instr_Regs_value_a3[13] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6386 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [22] -> \FETCH_Instr_Regs_value_a3[13] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6387 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [23] -> \FETCH_Instr_Regs_value_a3[13] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6388 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [24] -> \FETCH_Instr_Regs_value_a3[13] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6389 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [25] -> \FETCH_Instr_Regs_value_a3[13] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6390 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [26] -> \FETCH_Instr_Regs_value_a3[13] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6391 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [27] -> \FETCH_Instr_Regs_value_a3[13] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6392 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [28] -> \FETCH_Instr_Regs_value_a3[13] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6393 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [29] -> \FETCH_Instr_Regs_value_a3[13] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6394 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [30] -> \FETCH_Instr_Regs_value_a3[13] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6395 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[13][0][0]$y$2770 [31] -> \FETCH_Instr_Regs_value_a3[13] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9295 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [0] -> \FETCH_Instr_Regs_value_a3[29] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9296 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [1] -> \FETCH_Instr_Regs_value_a3[29] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9297 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [2] -> \FETCH_Instr_Regs_value_a3[29] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9298 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [3] -> \FETCH_Instr_Regs_value_a3[29] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9299 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [4] -> \FETCH_Instr_Regs_value_a3[29] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9300 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [5] -> \FETCH_Instr_Regs_value_a3[29] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9301 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [6] -> \FETCH_Instr_Regs_value_a3[29] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9302 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [7] -> \FETCH_Instr_Regs_value_a3[29] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9303 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [8] -> \FETCH_Instr_Regs_value_a3[29] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9304 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [9] -> \FETCH_Instr_Regs_value_a3[29] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9305 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [10] -> \FETCH_Instr_Regs_value_a3[29] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9306 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [11] -> \FETCH_Instr_Regs_value_a3[29] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9307 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [12] -> \FETCH_Instr_Regs_value_a3[29] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9308 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [13] -> \FETCH_Instr_Regs_value_a3[29] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9309 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [14] -> \FETCH_Instr_Regs_value_a3[29] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9310 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [15] -> \FETCH_Instr_Regs_value_a3[29] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9311 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [16] -> \FETCH_Instr_Regs_value_a3[29] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9312 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [17] -> \FETCH_Instr_Regs_value_a3[29] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9313 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [18] -> \FETCH_Instr_Regs_value_a3[29] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9314 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [19] -> \FETCH_Instr_Regs_value_a3[29] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9315 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [20] -> \FETCH_Instr_Regs_value_a3[29] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9316 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [21] -> \FETCH_Instr_Regs_value_a3[29] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9317 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [22] -> \FETCH_Instr_Regs_value_a3[29] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9318 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [23] -> \FETCH_Instr_Regs_value_a3[29] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9319 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [24] -> \FETCH_Instr_Regs_value_a3[29] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9320 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [25] -> \FETCH_Instr_Regs_value_a3[29] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9321 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [26] -> \FETCH_Instr_Regs_value_a3[29] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9322 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [27] -> \FETCH_Instr_Regs_value_a3[29] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9323 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [28] -> \FETCH_Instr_Regs_value_a3[29] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9324 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [29] -> \FETCH_Instr_Regs_value_a3[29] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9325 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [30] -> \FETCH_Instr_Regs_value_a3[29] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9326 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[29][0][0]$y$3154 [31] -> \FETCH_Instr_Regs_value_a3[29] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9348 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [0] -> \FETCH_Instr_Regs_value_a3[11] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9349 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [1] -> \FETCH_Instr_Regs_value_a3[11] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9350 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [2] -> \FETCH_Instr_Regs_value_a3[11] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9351 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [3] -> \FETCH_Instr_Regs_value_a3[11] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9352 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [4] -> \FETCH_Instr_Regs_value_a3[11] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9353 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [5] -> \FETCH_Instr_Regs_value_a3[11] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9354 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [6] -> \FETCH_Instr_Regs_value_a3[11] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9355 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [7] -> \FETCH_Instr_Regs_value_a3[11] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9356 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [8] -> \FETCH_Instr_Regs_value_a3[11] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9357 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [9] -> \FETCH_Instr_Regs_value_a3[11] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9358 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [10] -> \FETCH_Instr_Regs_value_a3[11] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9359 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [11] -> \FETCH_Instr_Regs_value_a3[11] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9360 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [12] -> \FETCH_Instr_Regs_value_a3[11] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9361 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [13] -> \FETCH_Instr_Regs_value_a3[11] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9362 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [14] -> \FETCH_Instr_Regs_value_a3[11] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9363 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [15] -> \FETCH_Instr_Regs_value_a3[11] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9364 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [16] -> \FETCH_Instr_Regs_value_a3[11] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9365 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [17] -> \FETCH_Instr_Regs_value_a3[11] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9366 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [18] -> \FETCH_Instr_Regs_value_a3[11] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9367 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [19] -> \FETCH_Instr_Regs_value_a3[11] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9368 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [20] -> \FETCH_Instr_Regs_value_a3[11] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9369 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [21] -> \FETCH_Instr_Regs_value_a3[11] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9370 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [22] -> \FETCH_Instr_Regs_value_a3[11] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9371 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [23] -> \FETCH_Instr_Regs_value_a3[11] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9372 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [24] -> \FETCH_Instr_Regs_value_a3[11] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9373 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [25] -> \FETCH_Instr_Regs_value_a3[11] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9374 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [26] -> \FETCH_Instr_Regs_value_a3[11] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9375 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [27] -> \FETCH_Instr_Regs_value_a3[11] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9376 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [28] -> \FETCH_Instr_Regs_value_a3[11] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9377 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [29] -> \FETCH_Instr_Regs_value_a3[11] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9378 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [30] -> \FETCH_Instr_Regs_value_a3[11] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9379 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[11][0][0]$y$2722 [31] -> \FETCH_Instr_Regs_value_a3[11] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9748 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [0] -> \FETCH_Instr_Regs_value_a3[23] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9749 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [1] -> \FETCH_Instr_Regs_value_a3[23] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9750 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [2] -> \FETCH_Instr_Regs_value_a3[23] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9751 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [3] -> \FETCH_Instr_Regs_value_a3[23] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9752 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [4] -> \FETCH_Instr_Regs_value_a3[23] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9753 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [5] -> \FETCH_Instr_Regs_value_a3[23] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9754 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [6] -> \FETCH_Instr_Regs_value_a3[23] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9755 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [7] -> \FETCH_Instr_Regs_value_a3[23] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9756 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [8] -> \FETCH_Instr_Regs_value_a3[23] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9757 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [9] -> \FETCH_Instr_Regs_value_a3[23] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9758 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [10] -> \FETCH_Instr_Regs_value_a3[23] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9759 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [11] -> \FETCH_Instr_Regs_value_a3[23] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9760 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [12] -> \FETCH_Instr_Regs_value_a3[23] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9761 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [13] -> \FETCH_Instr_Regs_value_a3[23] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9762 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [14] -> \FETCH_Instr_Regs_value_a3[23] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9763 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [15] -> \FETCH_Instr_Regs_value_a3[23] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9764 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [16] -> \FETCH_Instr_Regs_value_a3[23] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9765 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [17] -> \FETCH_Instr_Regs_value_a3[23] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9766 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [18] -> \FETCH_Instr_Regs_value_a3[23] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9767 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [19] -> \FETCH_Instr_Regs_value_a3[23] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9768 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [20] -> \FETCH_Instr_Regs_value_a3[23] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9769 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [21] -> \FETCH_Instr_Regs_value_a3[23] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9770 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [22] -> \FETCH_Instr_Regs_value_a3[23] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9771 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [23] -> \FETCH_Instr_Regs_value_a3[23] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9772 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [24] -> \FETCH_Instr_Regs_value_a3[23] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9773 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [25] -> \FETCH_Instr_Regs_value_a3[23] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9774 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [26] -> \FETCH_Instr_Regs_value_a3[23] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9775 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [27] -> \FETCH_Instr_Regs_value_a3[23] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9776 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [28] -> \FETCH_Instr_Regs_value_a3[23] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9777 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [29] -> \FETCH_Instr_Regs_value_a3[23] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9778 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [30] -> \FETCH_Instr_Regs_value_a3[23] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9779 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[23][0][0]$y$3010 [31] -> \FETCH_Instr_Regs_value_a3[23] [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9863 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [0] -> \FETCH_Instr_Regs_value_a3[28] [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9864 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [1] -> \FETCH_Instr_Regs_value_a3[28] [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9865 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [2] -> \FETCH_Instr_Regs_value_a3[28] [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9866 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [3] -> \FETCH_Instr_Regs_value_a3[28] [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9867 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [4] -> \FETCH_Instr_Regs_value_a3[28] [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9868 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [5] -> \FETCH_Instr_Regs_value_a3[28] [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9869 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [6] -> \FETCH_Instr_Regs_value_a3[28] [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9870 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [7] -> \FETCH_Instr_Regs_value_a3[28] [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9871 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [8] -> \FETCH_Instr_Regs_value_a3[28] [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9872 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [9] -> \FETCH_Instr_Regs_value_a3[28] [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9873 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [10] -> \FETCH_Instr_Regs_value_a3[28] [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9874 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [11] -> \FETCH_Instr_Regs_value_a3[28] [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9875 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [12] -> \FETCH_Instr_Regs_value_a3[28] [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9876 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [13] -> \FETCH_Instr_Regs_value_a3[28] [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9877 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [14] -> \FETCH_Instr_Regs_value_a3[28] [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9878 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [15] -> \FETCH_Instr_Regs_value_a3[28] [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9879 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [16] -> \FETCH_Instr_Regs_value_a3[28] [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9880 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [17] -> \FETCH_Instr_Regs_value_a3[28] [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9881 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [18] -> \FETCH_Instr_Regs_value_a3[28] [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9882 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [19] -> \FETCH_Instr_Regs_value_a3[28] [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9883 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [20] -> \FETCH_Instr_Regs_value_a3[28] [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9884 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [21] -> \FETCH_Instr_Regs_value_a3[28] [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9885 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [22] -> \FETCH_Instr_Regs_value_a3[28] [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9886 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [23] -> \FETCH_Instr_Regs_value_a3[28] [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9887 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [24] -> \FETCH_Instr_Regs_value_a3[28] [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9888 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [25] -> \FETCH_Instr_Regs_value_a3[28] [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9889 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [26] -> \FETCH_Instr_Regs_value_a3[28] [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9890 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [27] -> \FETCH_Instr_Regs_value_a3[28] [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9891 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [28] -> \FETCH_Instr_Regs_value_a3[28] [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9892 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [29] -> \FETCH_Instr_Regs_value_a3[28] [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9893 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [30] -> \FETCH_Instr_Regs_value_a3[28] [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9894 to $_DFFE_PP_ for $memory\FETCH_Instr_Regs_value_a3$wrmux[28][0][0]$y$3130 [31] -> \FETCH_Instr_Regs_value_a3[28] [31].

2.36. Executing TECHMAP pass (map to technology primitives).

2.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.36.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
No more expansions possible.
<suppressed ~1773 debug messages>

2.37. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2479 debug messages>

2.38. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$1927.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1933.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1933.slice[6].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1936.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1936.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1936.slice[6].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1873.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1876.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1879.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1885.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1888.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$1891.slice[0].carry ($lut).
Mapping top.$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.slice[0].carry ($lut).
Mapping top.$techmap$auto$memory_map.cc:196:handle_cell$2241.$auto$alumacc.cc:485:replace_alu$3594.slice[3].carry ($lut).
Mapping top.$techmap$auto$memory_map.cc:196:handle_cell$2338.$auto$alumacc.cc:485:replace_alu$3594.slice[0].carry ($lut).
Mapping top.$techmap$auto$memory_map.cc:285:handle_cell$3035.$auto$alumacc.cc:485:replace_alu$3594.slice[0].carry ($lut).

2.39. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.

2.40. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$3723 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [7], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22977 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18703 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [2], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21924 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18704 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [3], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21925 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18705 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [4], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21926 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18706 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [5], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21927 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18707 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [6], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21928 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18708 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [7], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21929 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18709 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [8], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21930 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18710 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [9], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21931 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18711 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [10], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21932 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18712 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [11], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21933 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18713 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [12], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21934 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18714 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [13], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21935 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18715 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [14], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21936 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18716 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [15], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18717 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [16], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21938 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18718 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [17], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21939 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18719 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [18], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18720 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [19], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18721 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [20], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18722 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [21], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21943 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18723 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [22], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18724 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [23], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21945 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18725 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [24], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18726 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [25], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18727 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [26], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18728 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [27], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18729 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [28], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21950 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18730 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [29], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18731 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [30], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18732 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [31], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18702 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [1], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21923 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18733 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1132_Y [32], S=$auto$simplemap.cc:168:logic_reduce$18498) into $auto$simplemap.cc:420:simplemap_dff$21954 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18460 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [2], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21956 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18461 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [3], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21957 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18462 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [4], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21958 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18463 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [5], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21959 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18464 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [6], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21960 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18465 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [7], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21961 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18466 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [8], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21962 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18467 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [9], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21963 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18468 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [10], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21964 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18469 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [11], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21965 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18470 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [12], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21966 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18471 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [13], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21967 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18472 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [14], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21968 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18473 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [15], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21969 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18474 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [16], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21970 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18475 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [17], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21971 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18476 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [18], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21972 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18477 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [19], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21973 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18478 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [20], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21974 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18479 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [21], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21975 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18480 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [22], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21976 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18481 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [23], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21977 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18482 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [24], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21978 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18483 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [25], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21979 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18484 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [26], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21980 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18485 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [27], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21981 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18486 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [28], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21982 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18487 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [29], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21983 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18488 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [30], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21984 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18489 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [31], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21985 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18459 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [1], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21955 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15939 (A=$ternary$warp-v_risc-v_4-stage.sv:1479$897_Y [1], B=1'1, S=\FETCH_Instr_ld_st_word_a2) into $auto$simplemap.cc:420:simplemap_dff$22145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15940 (A=$ternary$warp-v_risc-v_4-stage.sv:1479$897_Y [2], B=1'1, S=\FETCH_Instr_ld_st_word_a2) into $auto$simplemap.cc:420:simplemap_dff$22146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15938 (A=$ternary$warp-v_risc-v_4-stage.sv:1479$897_Y [0], B=1'1, S=\FETCH_Instr_ld_st_word_a2) into $auto$simplemap.cc:420:simplemap_dff$22144 (SB_DFF).
  Merging $techmap$shr$warp-v_risc-v_4-stage.sv:615$332.$auto$simplemap.cc:277:simplemap_mux$7140 (A=$techmap$shr$warp-v_risc-v_4-stage.sv:615$332.$10\buffer[31:0] [0], B=1'0, S=\FETCH_Instr_raw_a1 [11]) into $auto$simplemap.cc:420:simplemap_dff$22148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15941 (A=$ternary$warp-v_risc-v_4-stage.sv:1479$897_Y [3], B=1'1, S=\FETCH_Instr_ld_st_word_a2) into $auto$simplemap.cc:420:simplemap_dff$22147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25631 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25276 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22327 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25632 (A=1'1, B=$procmux$1572.Y_B [7], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22328 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25633 (A=1'1, B=$procmux$1572.Y_B [8], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22329 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25628 (A=1'0, B=$procmux$1572.Y_B [3], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22322 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25629 (A=1'1, B=$procmux$1572.Y_B [4], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22323 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25630 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$25373 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22324 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25627 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25282 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22326 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25634 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25324, S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22330 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25635 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25311, S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22332 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25636 (A=1'0, B=$procmux$1572.Y_B [11], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22335 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25637 (A=1'0, B=$procmux$1572.Y_B [12], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22336 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25638 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25269 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22337 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25639 (A=1'0, B=$procmux$1572.Y_B [14], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22338 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25640 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25224 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22339 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25641 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25230 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22340 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25642 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25217 [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22345 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25625 (A=1'1, B=$procmux$1572.Y_B [0], S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22319 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9615 (A=1'0, B=\FETCH_Instr_OrigInst_dest_reg_a1 [3], S=\FETCH_Instr_second_issue_ld_a1) into $auto$simplemap.cc:420:simplemap_dff$22541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18490 (A=1'0, B=$ternary$warp-v_risc-v_4-stage.sv:821$1117_Y [32], S=$auto$simplemap.cc:127:simplemap_reduce$20660) into $auto$simplemap.cc:420:simplemap_dff$21986 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$25626 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$25285, S=$techmap$procmux$1572.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:480$21602_Y) into $auto$simplemap.cc:420:simplemap_dff$22320 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14734 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14735 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [2], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14736 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [3], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14737 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [4], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14738 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [5], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14739 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [6], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14740 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [7], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14741 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [8], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14742 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [9], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14743 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [10], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14744 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [11], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14745 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [12], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14746 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [13], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14747 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [14], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14748 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [15], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14749 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [16], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14750 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [17], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14751 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [18], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14752 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [19], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14753 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [20], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14754 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [21], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14755 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [22], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14756 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [23], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22567 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14757 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [24], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22568 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14758 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [25], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22569 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14759 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [26], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14760 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [27], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22571 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14761 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [28], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22572 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14762 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [29], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22573 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14763 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [30], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22574 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14733 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [0], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14764 (A=$ternary$warp-v_risc-v_4-stage.sv:1291$832_Y [31], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22575 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14314 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22577 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14315 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [2], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22578 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14316 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [3], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22579 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14317 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [4], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22580 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14318 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [5], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22581 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14319 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [6], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22582 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14320 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [7], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22583 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14321 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [8], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22584 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14322 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [9], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22585 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14323 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [10], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22586 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14324 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [11], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22587 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14325 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [12], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22588 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14326 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [13], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22589 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14327 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [14], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22590 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14328 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [15], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22591 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14329 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [16], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22592 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14330 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [17], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22593 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14331 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [18], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22594 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14332 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [19], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22595 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14333 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [20], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22596 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14334 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [21], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22597 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14335 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [22], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22598 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14336 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [23], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22599 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14337 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [24], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22600 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14338 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [25], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22601 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14339 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [26], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22602 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14340 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [27], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22603 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14341 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [28], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22604 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14342 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [29], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22605 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14343 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [30], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22606 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14313 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [0], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22576 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14344 (A=$ternary$warp-v_risc-v_4-stage.sv:1249$811_Y [31], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22607 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15674 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22609 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15675 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [2], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22610 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15676 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [3], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15677 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [4], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22612 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15678 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [5], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15679 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [6], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22614 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15680 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [7], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15681 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [8], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15682 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [9], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15683 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [10], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15684 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [11], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15685 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [12], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15686 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [13], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15687 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [14], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15688 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [15], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15689 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [16], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15690 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [17], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15691 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [18], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15692 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [19], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15693 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [20], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15694 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [21], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15695 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [22], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15696 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [23], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15697 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [24], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15698 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [25], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15699 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [26], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15700 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [27], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15701 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [28], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15702 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [29], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15703 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [30], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15673 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [0], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22608 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15704 (A=$ternary$warp-v_risc-v_4-stage.sv:1375$874_Y [31], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15283 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15284 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [2], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15285 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [3], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15286 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [4], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15287 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [5], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15288 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [6], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15289 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [7], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15290 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [8], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15291 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [9], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22649 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15292 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [10], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22650 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15293 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [11], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15294 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [12], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22652 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15295 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [13], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22653 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15296 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [14], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22654 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15297 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [15], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22655 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15298 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [16], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22656 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15299 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [17], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22657 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15300 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [18], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22658 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15301 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [19], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22659 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15302 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [20], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22660 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15303 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [21], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15304 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [22], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15305 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [23], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15306 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [24], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15307 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [25], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15308 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [26], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22666 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15309 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [27], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22667 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15310 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [28], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22668 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15311 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [29], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22669 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15312 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [30], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22670 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15282 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [0], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15313 (A=$ternary$warp-v_risc-v_4-stage.sv:1333$853_Y [31], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22671 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13856 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22673 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13857 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [2], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22674 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13858 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [3], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13859 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [4], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22676 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13860 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [5], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22677 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13861 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [6], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22678 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13862 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [7], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22679 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13863 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [8], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22680 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13864 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [9], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22681 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13865 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [10], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22682 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13866 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [11], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22683 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13867 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [12], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22684 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13868 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [13], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22685 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13869 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [14], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22686 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13870 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [15], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22687 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13871 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [16], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13872 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [17], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13873 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [18], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22690 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13874 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [19], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22691 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13875 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [20], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22692 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13876 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [21], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22693 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13877 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [22], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22694 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13878 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [23], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22695 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13879 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [24], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22696 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13880 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [25], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22697 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13881 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [26], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22698 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13882 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [27], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22699 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13883 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [28], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22700 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13884 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [29], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22701 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13885 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [30], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22702 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13855 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [0], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22672 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13886 (A=$ternary$warp-v_risc-v_4-stage.sv:1207$790_Y [31], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22703 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13498 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22705 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13499 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [2], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22706 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13500 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [3], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22707 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13501 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [4], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22708 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13502 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [5], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22709 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13503 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [6], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22710 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13504 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [7], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22711 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13505 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [8], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22712 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13506 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [9], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22713 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13507 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [10], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22714 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13508 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [11], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22715 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13509 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [12], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22716 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13510 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [13], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22717 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13511 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [14], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22718 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13512 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [15], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22719 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13513 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [16], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22720 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13514 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [17], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22721 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13515 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [18], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22722 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13516 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [19], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22723 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13517 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [20], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22724 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13518 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [21], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22725 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13519 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [22], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22726 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13520 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [23], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22727 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13521 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [24], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22728 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13522 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [25], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22729 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13523 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [26], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22730 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13524 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [27], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22731 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13525 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [28], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22732 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13526 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [29], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22733 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13527 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [30], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22734 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13497 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [0], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22704 (SB_DFF).
  Merging $techmap$shr$warp-v_risc-v_4-stage.sv:615$338.$auto$simplemap.cc:277:simplemap_mux$8305 (A=1'0, B=$techmap$shr$warp-v_risc-v_4-stage.sv:615$332.$10\buffer[31:0] [0], S=\FETCH_Instr_raw_a1 [11]) into $auto$simplemap.cc:420:simplemap_dff$22736 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13528 (A=$ternary$warp-v_risc-v_4-stage.sv:1165$769_Y [31], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22735 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15747 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [1], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15748 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [2], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15749 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [3], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22811 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15750 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [4], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22812 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15751 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [5], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22813 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15752 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [6], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22814 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15753 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [7], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22815 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15754 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [8], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22816 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15755 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [9], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22817 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15756 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [10], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22818 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15757 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [11], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22819 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15758 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [12], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22820 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15759 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [13], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22821 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15760 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [14], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22822 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15761 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [15], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22823 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15762 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [16], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22824 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15763 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [17], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22825 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15764 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [18], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22826 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15765 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [19], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22827 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15766 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [20], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22828 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15767 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [21], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22829 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15768 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [22], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22830 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15769 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [23], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22831 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15770 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [24], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22832 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15771 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [25], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22833 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15772 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [26], B=1'0, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22834 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15773 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [27], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22835 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15774 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [28], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22836 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15746 (A=$auto$simplemap.cc:309:simplemap_lut$35047, B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22808 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18154 (A=$logic_or$warp-v_risc-v_4-stage.sv:1716$1030_Y, B=1'0, S=\FETCH_Instr_reset_a3) into $auto$simplemap.cc:420:simplemap_dff$22838 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5052 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [1], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22930 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5053 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [2], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22931 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5054 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [3], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22932 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5055 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [4], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22933 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5056 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [5], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22934 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5057 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [6], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22935 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5058 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [7], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22936 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5059 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [8], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22937 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5060 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [9], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22938 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5061 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [10], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22939 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5062 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [11], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22940 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5063 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [12], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22941 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5064 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [13], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22942 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5065 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [14], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22943 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5066 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [15], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22944 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5067 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [16], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22945 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5068 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [17], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22946 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5069 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [18], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22947 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5070 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [19], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22948 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5071 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [20], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22949 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5072 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [21], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22950 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5073 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [22], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22951 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5074 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [23], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22952 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5075 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [24], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22953 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5076 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [25], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22954 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5077 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [26], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22955 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5078 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [27], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22956 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5079 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [28], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22957 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5080 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [29], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22958 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5081 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [30], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22959 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18045 (A=$logic_or$warp-v_risc-v_4-stage.sv:1715$1025_Y, B=1'0, S=\FETCH_Instr_reset_a3) into $auto$simplemap.cc:420:simplemap_dff$22839 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$15775 (A=$sub$warp-v_risc-v_4-stage.sv:1394$878_Y [29], B=1'1, S=$logic_or$warp-v_risc-v_4-stage.sv:1392$877_Y) into $auto$simplemap.cc:420:simplemap_dff$22837 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5051 (A=$ternary$warp-v_risc-v_4-stage.sv:573$317_Y [0], B=1'0, S=\FETCH_Instr_reset_a0) into $auto$simplemap.cc:420:simplemap_dff$22963 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4083 (A=\FETCH_Instr_next_good_path_mask_a0 [1], B=1'0, S=\FETCH_Instr_reset_n1) into $auto$simplemap.cc:420:simplemap_dff$22967 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4084 (A=\FETCH_Instr_next_good_path_mask_a0 [2], B=1'0, S=\FETCH_Instr_reset_n1) into $auto$simplemap.cc:420:simplemap_dff$22968 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4085 (A=\FETCH_Instr_next_good_path_mask_a0 [3], B=1'0, S=\FETCH_Instr_reset_n1) into $auto$simplemap.cc:420:simplemap_dff$22969 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3717 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [1], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22971 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3718 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [2], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22972 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3719 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [3], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22973 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3720 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [4], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22974 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3721 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [5], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22975 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3722 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [6], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22976 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9702 (A=$ternary$warp-v_risc-v_4-stage.sv:790$666_Y [1], B=1'0, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22980 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3716 (A=$ternary$warp-v_risc-v_4-stage.sv:411$170_Y [0], B=1'0, S=\reset) into $auto$simplemap.cc:420:simplemap_dff$22970 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9701 (A=$add$warp-v_risc-v_4-stage.sv:789$661_Y [0], B=1'1, S=\FETCH_Instr_reset_a2) into $auto$simplemap.cc:420:simplemap_dff$22979 (SB_DFFE).

2.41. Executing ICE40_OPT pass (performing simple optimizations).

2.41.1. Running ICE40 specific optimizations.

2.41.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~403 debug messages>

2.41.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1854 debug messages>
Removed a total of 618 cells.

2.41.4. Executing OPT_RMDFF pass (remove dff with constant values).

2.41.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 348 unused cells and 8927 unused wires.
<suppressed ~367 debug messages>

2.41.6. Rerunning OPT passes. (Removed registers in this run.)

2.41.7. Running ICE40 specific optimizations.

2.41.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~10 debug messages>

2.41.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.41.10. Executing OPT_RMDFF pass (remove dff with constant values).

2.41.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.41.12. Rerunning OPT passes. (Removed registers in this run.)

2.41.13. Running ICE40 specific optimizations.

2.41.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

2.41.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

2.41.16. Executing OPT_RMDFF pass (remove dff with constant values).

2.41.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

2.41.18. Finished OPT passes. (There is nothing left to do.)

2.42. Executing TECHMAP pass (map to technology primitives).

2.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

2.42.2. Continuing TECHMAP pass.
No more expansions possible.

2.43. Executing ABC pass (technology mapping using ABC).

2.43.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 8269 gates and 10332 wires to a netlist network with 2061 inputs and 616 outputs.

2.43.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1646.
ABC: Participating nodes from both networks       =    3527.
ABC: Participating nodes from the first network   =    1665. (  43.43 % of nodes)
ABC: Participating nodes from the second network  =    1862. (  48.57 % of nodes)
ABC: Node pairs (any polarity)                    =    1665. (  43.43 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1148. (  29.94 % of names can be moved)
ABC: Total runtime =     0.68 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

2.43.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     3823
ABC RESULTS:        internal signals:     7655
ABC RESULTS:           input signals:     2061
ABC RESULTS:          output signals:      616
Removing temp directory.

2.44. Executing ICE40_WRAPCARRY pass (wrap carries).

2.45. Executing TECHMAP pass (map to technology primitives).

2.45.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

2.45.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 247 unused cells and 3363 unused wires.

2.46. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4253
  1-LUT               89
  2-LUT              548
  3-LUT             1388
  4-LUT             2228

Eliminating LUTs.
Number of LUTs:     4253
  1-LUT               89
  2-LUT              548
  3-LUT             1388
  4-LUT             2228

Combining LUTs.
Number of LUTs:     4116
  1-LUT               89
  2-LUT              396
  3-LUT             1344
  4-LUT             2287

Eliminated 0 LUTs.
Combined 137 LUTs.
<suppressed ~32109 debug messages>

2.47. Executing TECHMAP pass (map to technology primitives).

2.47.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

2.47.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000001001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001110101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101110000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010100111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000101110111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010000011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110010110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000100011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000001000101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111011100010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010001010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110010101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
No more expansions possible.
<suppressed ~7015 debug messages>
Removed 0 unused cells and 8243 unused wires.

2.48. Executing AUTONAME pass.
Renamed 72128 objects in module top (55 iterations).
<suppressed ~10232 debug messages>

2.49. Executing HIERARCHY pass (managing design hierarchy).

2.49.1. Analyzing design hierarchy..
Top module:  \top

2.49.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

2.50. Printing statistics.

=== top ===

   Number of wires:               4318
   Number of wire bits:           9131
   Number of public wires:        4318
   Number of public wire bits:    9131
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6445
     SB_CARRY                      554
     SB_DFF                        422
     SB_DFFE                       992
     SB_DFFESR                      31
     SB_DFFESS                       1
     SB_DFFSR                      295
     SB_DFFSS                       30
     SB_LUT4                      4116
     SB_RAM40_4K                     4

2.51. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

2.52. Executing BLIF backend.

2.53. Executing JSON backend.

Warnings: 17 unique messages, 17 total
End of script. Logfile hash: 1638636489, CPU: user 77.64s system 0.40s, MEM: 75.03 MB peak
Yosys 0.9+1706 (git sha1 7cc9d487, clang 7.0.1-8+rpi3 -fPIC -Os)
Time spent: 26% 47x opt_expr (20 sec), 25% 31x opt_merge (20 sec), 20% 35x opt_clean (16 sec), ...
